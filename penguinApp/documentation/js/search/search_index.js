var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["1","11","4","9","browser","class","compon","index","inject","match","modul","out","overview","reset","result","rout","support","svg","zoom"],"modules.html":["aboutpagemodul","aboutpageroutingmodul","appmodul","brows","browser","gamepagemodul","gamepageroutingmodul","homepagemodul","homepageroutingmodul","match","modul","result","support","svg","teampagemodul","teampageroutingmodul"],"modules/AboutPageModule.html":["about.pag","aboutpag","aboutpagemodul","aboutpageroutingmodul","angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","out","reset","result","routing.modul","sourc","src/app/pages/about/about.module.t","support","svg","zoom"],"modules/AboutPageRoutingModule.html":["about.pag","aboutpag","aboutpageroutingmodul","angular/cor","angular/rout","browser","class","compon","const","export","file","import","info","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/about/about","support","svg","zoom"],"modules/AppModule.html":["angular/cor","angular/form","angular/platform","angular/rout","anim","animations/nav","app","app.compon","appcompon","appmodul","approutingmodul","bar/ngx","bootstrap","browser","browser/anim","browseranimationsmodul","browsermodul","class","declar","enteranim","entrycompon","export","file","formsmodul","import","info","ionic","ionic/angular","ionicmodul","ionicmodule.forroot","ionicroutestrategi","match","modul","native/splash","native/statu","navanim","ngmodul","out","provid","reset","result","routereusestrategi","routermodul","routing.modul","screen/ngx","sourc","splashscreen","src/app/app.module.t","statusbar","support","svg","useclass","zoom"],"modules/GamePageModule.html":["angular/common","angular/cor","angular/form","angular/platform","board/board.compon","board/hex/hex.compon","board/penguin/penguin.compon","boardcompon","browser","browser/anim","browseranimationsmodul","class","commonmodul","console/console.compon","consolecompon","control/control.compon","controlcompon","declar","export","file","formsmodul","game","game.pag","gamepag","gamepagemodul","gamepageroutingmodul","hexcompon","import","info","info/info.compon","infocompon","ionic/angular","ionicmodul","match","modul","ngmodul","out","penguincompon","reset","result","routing.modul","sourc","src/app/pages/game/game.module.t","support","svg","zoom"],"modules/GamePageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","const","export","file","game.pag","gamepag","gamepageroutingmodul","import","info","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/game/gam","support","svg","zoom"],"modules/HomePageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","export","file","formsmodul","home","home.pag","homepag","homepagemodul","homepageroutingmodul","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","out","reset","result","routing.modul","sourc","src/app/pages/home/home.module.t","support","svg","zoom"],"modules/HomePageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","const","export","file","home.pag","homepag","homepageroutingmodul","import","info","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/home/hom","support","svg","zoom"],"modules/TeamPageModule.html":["angular/common","angular/cor","angular/form","browser","class","commonmodul","declar","export","file","formsmodul","import","info","ionic/angular","ionicmodul","match","modul","ngmodul","out","reset","result","routing.modul","sourc","src/app/pages/team/team.module.t","support","svg","team","team.pag","teampag","teampagemodul","teampageroutingmodul","zoom"],"modules/TeamPageRoutingModule.html":["angular/cor","angular/rout","browser","class","compon","const","export","file","import","info","match","modul","ngmodul","out","path","reset","result","rout","routermodul","routermodule.forchild(rout","routing.module.t","sourc","src/app/pages/team/team","support","svg","team.pag","teampag","teampageroutingmodul","zoom"],"components/AboutPage.html":["about.page.html","about.page.scss","aboutpag","angular/cor","app","class","compon","constructor","export","file","implement","import","info","match","metadata","ngoninit","oninit","result","selector","sourc","src/app/pages/about/about.page.t","styleurl","templateurl"],"components/AppComponent.html":["0","angular/cor","app","app.component.html","app.component.scss","appcompon","apppag","bar/ngx","bookmark","boolean","call","chang","check","class","color","compon","console.log('&#x1f389","console.log('dark","const","constructor","constructor(platform","cube","dark","darkthem","default","document.body.classlist.toggle('dark","export","file","game","home","icon","implement","import","info","initializeapp","ionic","ionic/angular","isweb","listen","load","match","matchmedia","media","metadata","method","mode","native/splash","native/statu","ngoninit","number","oninit","page.title.tolowercas","path","path.tolowercas","peopl","platform","prefer","prefersdark","prefersdark.addlistener(mediaqueri","privat","properti","public","queri","result","return","root","scheme","scheme)').media","screen/ngx","selectedindex","selector","shouldadd","sourc","splashscreen","src/app/app.component.t","statusbar","string","styleurl","support","switch","team","templateurl","theme","this.apppages.findindex(pag","this.darkthem","this.initializeapp","this.platform.ready().then","this.selectedindex","this.splashscreen.hid","this.statusbar.styledefault","this.toggledarktheme(mediaquery.match","this.toggledarktheme(prefersdark.match","this.toggledarktheme(this.darkthem","titl","toggledarkthem","toggledarktheme(shouldadd","togglethem","true","undefin","url","us","user","valu","void","window.location.pathname.split('pages/')[1","window.matchmedia('(pref"],"components/BoardComponent.html":["0","0.5","1","2000","2d","6x6","8x8","90","_","accordingli","add","addhexagon","agrement","alert","allow","angular/anim","angular/cor","anim","animate('0.5","animate('1","app","appservic","array","array(this.numberhexagonalvalu","ask","avail","best","bestmov","bind","board","board.component.html","board.component.scss","board.creat","boardcompon","boolean","c","call","cell","cellclick","cellpo","chang","changement","check","class","click","code","code.set","color","column","compon","console.log('board","console.log('gam","console.log('gener","console.log('init","constraint","constructor","constructor(priv","constructor(toastcontrol","contain","control","count","creat","curent","current","currentplayerid","declar","decreas","default","delet","depend","descript","destroy","document","document.addeventlistener('new_best_mov","each","element","emitt","empti","enter","error","event","eventemitt","export","fake","fals","featur","file","final","first","fish","front","fsm","function","game","gameservic","gamestart","gener","generatemap","generatemapfromwasmboard","generatewasmpenguin","genrat","getbestmoveandprocess","go","height","hex","hexagon","hexagonal.add","hexagonal.remov","hexheight","hexwidth","human","humanplayerid","ia","id","if(this.numberhexagonalvalu","ignor","implement","import","increas","info","initi","initialize.gener","initwasmboard","input","ionic/angular","isload","it.then","launch","leav","littl","machine.som","map","map/textur","match","mct","mcts.final","mcts.two","mctsconstraint","mctsplayer","messag","metadata","method","models/appmachin","models/cel","models/gamemachin","models/penguin","modul","module.penguin_mctsplayer(this.wasmgam","module.penguingame(this.numberhexagonalvalu","move","moveperform","nbhumanfish","nbmctsfish","new","newpenguinclick","ngondestroy","ngoninit","notifi","null","number","numberhexagon","numberhexagonal(val:numb","numberhexagonalchang","numberhexagonalvalu","numberpenguin","numberpenguin(val:numb","numberpenguinchang","numberpenguinvalu","object","ok","on","oncellclick","oncellclick(cellclick","oninit","onpenguinclick","onpenguinclick(newpenguinclick","opac","other","output","own","paramet","parent","part","penguin","penguinpos","penguinselect","perform","performed.then","pixel","play","play.then","player","playturn","playwasmmov","pointer","pose","posepenguinon","posepenguinon(cellpo","presenterrortoast","presenterrortoast(messag","presentsuccesstoast","presentsuccesstoast(messag","process","processbestmov","processbestmove(bestmov","properti","put","putpenguinonwasmboard","queri","random","rang","react","reaction","remov","removehexagon","result","return","right","row","row.then","scale(0.8","scale(1","select","selector","sent","set","set/remov","setavailablecellcolor","setavailablecellcolor(set","setselectedpenguincolor","setselectedpenguincolor(set","size","sourc","src/app/pages/game/board/board.component.t","stagger","start","startwasmgam","state","statecontrol","statu","string","style","styleurl","success","switch","switchcurrentplay","switchplayertoplay","templat","templateurl","theme","this.cel","this.currentplayerid","this.gamestart","this.generatemap","this.generatemapfromwasmboard","this.generatewasmpenguin","this.humanplayerid","this.isload","this.numberhexagonalvalu","this.numberpenguinchange.emit(this.numberpenguinvalu","this.numberpenguinvalu","this.penguin","this.playturn","this.processbestmove(this.wasmmctsplayer.getlastbestmov","this.putpenguinonwasmboard","this.wasmboard","this.wasmboard.getpawnsonboard","this.wasmgam","this.wasmgame.delet","this.wasmgame.getboard","this.wasmgame.getfirstplayertoplay","this.wasmmctsplay","this.wasmpenguin","time","toast","toastcontrol","top","transform","transit","transition('ent","transition('leav","tree","trigger","trigger('initanim","turn.show","two","type","undefin","updat","us","user","user'","user.two","val","valu","var","variabl","vector","void","wasm","wasmboard","wasmgam","wasmmctsplay","wasmmov","wasmpenguin","way","width","window","written","x"],"components/ConsoleComponent.html":["angular/cor","app","bind","c","class","compon","consol","console.component.html","console.component.scss","console.log(","console.log(this.console_output","console_output","consolecompon","constructor","creat","declar","descript","document.addeventlistener('mcts_consol","e","e.detail.replace(new","eventlisten","export","file","g","ignor","implement","import","info","match","messag","metadata","modul","ngoninit","oninit","properti","public","regexp('\\n","result","selector","show","sourc","src/app/pages/game/console/console.component.t","string","styleurl","templateurl","this.console_output","var","wasm"],"components/ControlComponent.html":["1000","access","alert","alert.pres","alertcontrol","angular/cor","app","applic","appservic","appservice.send(appservice.machine.states.settings.on.nextstep[0].eventtyp","async","asynchron","await","board/models/appmachin","bottom","box","button","cancel","chang","class","click","color","compon","confirm","console.log('cancel","console.log('confirm","const","constructor","constructor(alertcontrol","constructor(priv","continu","control","control.component.html","control.component.scss","controlcompon","creat","current","default","descript","durat","element","emitt","event","eventemitt","export","file","final","game","go","handler","hexagon","ignor","implement","import","info","input","ionic/angular","let'","littl","machin","match","messag","metadata","method","new","next","nextstep","ngoninit","notifi","number","oninit","output","param","paramet","parent","penguin","posit","presentconfirm","presenttoast","privat","properti","purchas","rang","rangehexagon","rangehexagonal(val:numb","rangehexagonalchang","rangehexagonalvalu","rangepenguin","rangepenguin(val:numb","rangepenguinchang","rangepenguinvalu","result","return","role","selector","servic","set","show","sourc","src/app/pages/game/control/control.component.t","state","statecontrol","styleurl","success","templat","templateurl","text","this.alertcontroller.cr","this.nextstep.emit","this.presenttoast","this.rangehexagonalchange.emit(this.rangehexagonalvalu","this.rangehexagonalvalu","this.rangepenguinchange.emit(this.rangepenguinvalu","this.rangepenguinvalu","this.toastcontroller.cr","titl","toast","toast.pres","toastcontrol","type","user","val","valu","void","want"],"components/GamePage.html":["0","2","6","99","abov","afterviewinit","allow","angular/cor","anim","app","appservic","appservice.send(appservice.machine.states.initpospenguin.on.penguinsposed[0].eventtyp","board","board/board.compon","board/models/appmachin","board/models/gamemachin","boardcompon","boolean","button","c","call","chang","class","compon","console.log('init","constructor","control","count","creat","current","declar","default","descript","elementref","export","fals","file","fish","flip","fliphumanscor","flipmctsscor","flipscor","flux","function","game","game.page.html","game.page.scss","gamepag","gameservic","gamestart","hexagon","human","if(this.playertoplay","ignor","implement","import","info","info/info.compon","infocompon","inform","init","initgameboard","input","launch","launchgam","line","machin","match","mct","metadata","method","modul","nbhexagon","nbhumanfish","nbmctsfish","nbpenguin","new","ngoninit","node","null","number","oh","on","oninit","own","page","part","penguin","penguinpos","play","player","playertoplay","pose","press","privat","properti","read","result","return","score","scorehuman","scoremct","selector","servic","show","singl","son","sourc","src/app/pages/game/game.page.t","start","state","statecontrol","static","string","styleurl","switch","switchplayertoplay","symbol","templateurl","this.boardcomponent.initwasmboard","this.boardcomponent.startwasmgam","this.fliphumanscor","this.fliphumanscore.flipto","this.flipmctsscor","this.flipmctsscore.flipto","this.flipscor","this.gamestart","this.infocomponent.penguinpos","this.nbhumanfish","this.nbmctsfish","this.playertoplay","this.scorehuman.nativeel","this.scoremcts.nativeel","true","us","user","valu","var","variabl","viewchild","viewchild('divhuman","viewchild('divmct","viewchild(boardcompon","viewchild(infocompon","visual","void","wasm"],"components/HexComponent.html":["0","add","angular/cor","app","appservic","appservice.state.valu","array","assets/game/available_fish1.png","assets/game/available_fish2.png","assets/game/available_fish3.png","assets/game/empty.png","assets/game/normal_fish1.png","assets/game/normal_fish2.png","assets/game/normal_fish3.png","assets/game/selected_fish1.png","assets/game/selected_fish2.png","assets/game/selected_fish3.png","assets/game/tilesnow_big.png","avail","board","boolean","cell","cellclick","chex","class","click","color","compon","componennt","console.log(this.cell.tostr","constructor","custom","descript","emitt","event","eventemitt","export","extend","fals","file","function","gameservic","gameservice.state.valu","hex","hex.component.html","hex.component.scss","hexagon","hexcompon","hover","ignor","implement","import","index","info","initpospenguin","input","isload","isselect","know","map","match","metadata","method","models/appmachin","models/cel","models/gamemachin","mous","new","newstatu","ngoninit","oncellclick","oncellhov","oncellhover(hov","oninit","out","output","over","param","paramet","parent","penguinselect","properti","rais","react","refer","referenc","result","return","select","selector","set","setselectedcolor","setselectedcolor(newstatu","show","sourc","specifi","src/app/pages/game/board/hex/hex.component.t","string","styleurl","templateurl","terrain","terraintyp","terraintype.specifi","textur","this.cell.isavail","this.cell.setselectedcolor(fals","this.cell.setselectedcolor(tru","this.cell.terrainindex","this.cellclicked.emit(this.cel","this.isload","this.isselect","this.setselectedcolor(hov","true","type","user","variabl","void","wait"],"components/HomePage.html":["angular/cor","app","class","compon","constructor","export","file","home","home.page.html","home.page.scss","homepag","implement","import","info","match","metadata","ngoninit","oninit","result","selector","sourc","src/app/pages/home/home.page.t","styleurl","templateurl"],"components/InfoComponent.html":["1000","action","alert","alert.pres","alertcontrol","angular/cor","app","appservic","arraw","array","array(this.nbpenguin","async","await","board/models/appmachin","board/models/penguin","boolean","bottom","button","cancel","catch","class","click","color","compon","confirm","console.log('cancel","console.log('confirm","const","constructor","constructor(alertcontrol","constructor(priv","control","creat","current","describ","descript","durat","emitt","event","eventemitt","export","file","game","go","handler","implement","import","info","info.component.html","info.component.scss","infocompon","init","input","ionic/angular","launch","launchgam","let'","littl","match","messag","metadata","method","nbpenguin","new","ngoninit","non","number","oninit","output","param","paramet","parent","penguin","penguinpos","penguinsnotpos","perform","pose","posit","presenttoast","privat","properti","purchas","result","return","role","selector","servic","show","sourc","src/app/pages/game/info/info.component.t","start","startconfirm","state","stock","styleurl","success","templateurl","text","this.alertcontroller.cr","this.launchgame.emit","this.penguinsnotpos","this.penguinsnotposed.pop","this.presenttoast","this.toastcontroller.cr","titl","toast","toast.pres","toastcontrol","type","updat","void","want"],"components/PenguinComponent.html":["angular/cor","anim","app","array","assets/penguin.png","assets/penguin_enemie.png","assets/penguin_selected.png","board","boolean","class","click","compon","console.log(this.penguin.tostr","constructor","current","descript","emitt","event","eventemitt","export","file","gameservic","gameservice.state.valu","ignor","implement","import","index","info","input","isload","match","metadata","method","models/gamemachin","models/penguin","moveblock","new","ngoninit","oninit","onpenguinclick","output","owner","parent","penguin","penguin'","penguin.component.html","penguin.component.scss","penguinclick","penguincompon","permit","properti","rais","react","referenc","result","return","selector","set","show","sourc","src/app/pages/game/board/penguin/penguin.component.t","string","styleurl","templateurl","textur","this.penguinclicked.emit(this.penguin","type","variabl","void"],"components/TeamPage.html":["angular/cor","app","class","compon","constructor","export","file","implement","import","info","match","metadata","ngoninit","oninit","result","selector","sourc","src/app/pages/team/team.page.t","styleurl","team","team.page.html","team.page.scss","teampag","templateurl"],"injectables/QuoteService.html":["angular/cor","class","constructor","export","file","import","info","inject","match","providedin","quoteservic","result","root","sourc","src/app/services/quote.service.t"],"routes.html":["aboutpag","compon","gamepag","homepag","match","path","pathmatch","redirectto","result","rout","teampag"],"classes/AppPage.html":["apppag","browser","browser.get(destin","class","content')).gettext","e2e/src/app.po.t","element","element(by.deepcss('app","export","file","getparagraphtext","import","info","ion","match","method","navigateto","navigateto(destin","protractor","result","return","root","sourc","void"],"classes/Cell.html":["0","1","17","2","33","4","7","90","area","art","availableindex","base","boolean","calcul","cell","center","center.i","center.x","class","column","console.log(\"getcellcent","const","constructor","constructor(row","coordin","declar","default","descript","emptyindex","even","export","fals","file","getcellcent","gethexheight","gethexwidth","haspenguin","height","hex","hexbottompad","hexheight","hexsiz","hexwidth","ignor","import","info","isavail","isgon","isometr","map","match","math.sqrt(3","method","modul","module.hex_cube_to_offset(module.hex_axial_to_cube(this.wasmcell.getposit","nbfish","necessari","non","normalindex","null","number","object","odd","on","overlap","pixel","po","properti","radiu","repres","result","return","row","selectedindex","set","setavailablecolor","setavailablecolor(set","setselectedcolor","setselectedcolor(set","setwasmcel","setwasmcell(wasmcel","sourc","specifi","src/app/pages/game/board/models/cell.t","system","terrainindex","this.cent","this.column","this.getcellcent","this.haspenguin","this.hexheight","this.hexs","this.hexwidth","this.isavail","this.nbfish","this.row","this.terrainindex","this.wasmcel","this.wasmcell.getfish","this.wasmcell.isgon","tostr","valu","var","view","void","wasmcel","wasmcell.getfish","wasmpo","wasmpos.column","wasmpos.row","width","work","x","y"],"classes/Penguin.html":["0","2","appmachin","appservic","appservice.state.valu","boolean","cell","cellposit","class","console.log(this.tostr","constructor","declar","default","export","fals","file","gamestart","import","info","isselect","isvis","match","method","modul","module.hex_axial_to_cube(this.wasmpenguin.getcurrentcell().getposit","module.hex_cube_to_offset","move","moveto","moveto(newcel","movetoanim","newcel","newcell.getcellcent","newcell.tostr","null","number","penguin","playerpenguin","po","privat","properti","result","return","setwasmpenguin","setwasmpenguin(wasmpenguin","sourc","src/app/pages/game/board/models/penguin.t","switchpenguincolor","textureindex","this.cellposit","this.cellposition.column","this.cellposition.haspenguin","this.cellposition.isgon","this.cellposition.row","this.cellposition.tostr","this.cent","this.isselect","this.isvis","this.textureindex","this.wasmpenguin","this.wasmpenguin.getowner().getid","tostr","true","valu","var","void","wasmpenguin","wasmpo","wasmpos.column","wasmpos.row"],"classes/Pos.html":["class","constructor","constructor(x","export","file","info","match","number","po","properti","result","sourc","src/app/pages/game/board/models/pos.t","this.i","this.x","x","y"],"miscellaneous.html":["0","access","action","angular","app","applic","appmachin","appservic","begin","bind","c","call","components,then","context","control","default","defin","describ","destin","emptyindex","enteranim","environ","final","fsm","game","gamemachin","gameservic","id","identifi","initi","machin","match","miscellan","modul","noun","part","penguin","perform","possibl","result","servic","set","start","state","target","valu","variabl","wasm","whole"],"coverage.html":["0","0/0","0/1","0/10","0/2","0/20","0/8","100","18/19","2/2","41","46/49","6/6","7/7","81","9/10","9/11","90","93","94","aboutpag","appcompon","apppag","boardcompon","cell","class","compon","consolecompon","controlcompon","coverag","document","e2e/src/app.po.t","file","gamepag","hexcompon","homepag","identifi","infocompon","inject","match","penguin","penguincompon","po","project","quoteservic","result","src/app/app.component.t","src/app/pages/about/about.page.t","src/app/pages/game/board/board.component.t","src/app/pages/game/board/hex/hex.component.t","src/app/pages/game/board/models/cell.t","src/app/pages/game/board/models/penguin.t","src/app/pages/game/board/models/pos.t","src/app/pages/game/board/penguin/penguin.component.t","src/app/pages/game/console/console.component.t","src/app/pages/game/control/control.component.t","src/app/pages/game/game.page.t","src/app/pages/game/info/info.component.t","src/app/pages/home/home.page.t","src/app/pages/team/team.page.t","src/app/services/quote.service.t","statement","teampag","type"]},"length":30},"tokenStore":{"root":{"0":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.021604938271604937},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.007518796992481203},"coverage.html":{"ref":"coverage.html","tf":0.09782608695652174}},".":{"5":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"docs":{}},"/":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.03260869565217391}}},"2":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.021739130434782608}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"docs":{}}},"1":{"0":{"0":{"0":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.03260869565217391}}},"docs":{}},"1":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456}}},"7":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}},"8":{"docs":{},"/":{"1":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"docs":{}},"docs":{}}},"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}},"2":{"0":{"0":{"0":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"docs":{}},"docs":{}},"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.021604938271604937},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.014388489208633094}},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"docs":{}}},"3":{"3":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}},"docs":{}},"4":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"6":{"docs":{},"/":{"4":{"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"docs":{}},"docs":{}}},"docs":{"index.html":{"ref":"index.html","tf":0.09090909090909091},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}},"6":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}},"x":{"6":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"docs":{}},"/":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"docs":{}}},"7":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}},"/":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"docs":{}}},"8":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"docs":{},"x":{"8":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"docs":{}}},"9":{"0":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.005958291956305859},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.018518518518518517},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"9":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}},"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456}},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}},"docs":{}},"docs":{}}},"docs":{},"b":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.18}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"modules.html":{"ref":"modules.html","tf":0.18},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}},"s":{"docs":{},"e":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198}}}}}}}},"k":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024509803921568627},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.004965243296921549},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0457516339869281},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.024691358024691357},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.03597122302158273}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.012909632571996028},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.01126126126126126},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.026143790849673203},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.04678362573099415}},"/":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.03529411764705882},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":5.001986097318769},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.018018018018018018},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}},"x":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.005958291956305859},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.007518796992481203}}}}},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.018018018018018018},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}},"c":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.022840119165839126},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.007518796992481203}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.045454545454545456},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":5.057142857142857},"classes/Cell.html":{"ref":"classes/Cell.html","tf":5.006172839506172},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":5.014388489208633},"classes/Pos.html":{"ref":"classes/Pos.html","tf":5.054054054054054},"coverage.html":{"ref":"coverage.html","tf":0.043478260869565216}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.004965243296921549},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.03508771929824561}}}}}},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":5.081081081081081},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.014705882352941},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":5.019860973187686},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":5.073170731707317},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":5.0426229508196725},"components/GamePage.html":{"ref":"components/GamePage.html","tf":5.0292792792792795},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":5.062091503267974},"components/HomePage.html":{"ref":"components/HomePage.html","tf":5.076923076923077},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":5.048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":5.087719298245614},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":5.076923076923077},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.11956521739130435}},"e":{"docs":{},"n":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}},"t":{"docs":{},"s":{"docs":{},",":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.04},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.023529411764705882},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0392156862745098},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0392156862745098}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.08108108108108109},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.036585365853658534},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.00980392156862745},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.07692307692307693},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.017543859649122806},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.07692307692307693},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.13636363636363635},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.02702702702702703}},"(":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}},"x":{"docs":{"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.05405405405405406}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}},"o":{"docs":{},"l":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.0975609756097561}},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.03529411764705882},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":5.024390243902439},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513}},"'":{"docs":{},"&":{"docs":{},"#":{"docs":{},"x":{"1":{"docs":{},"f":{"3":{"8":{"9":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}}}}}}},"\"":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025}}}}}}}}}}}}}}}}},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.036585365853658534}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.019672131147540985},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.02702702702702703},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.03529411764705882},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":5.00655737704918},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.01639344262295082},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.020242914979757085}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.021604938271604937}}}}}},"d":{"docs":{},"e":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.01086956521739}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.004965243296921549},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.005958291956305859},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}},"x":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}},"u":{"docs":{},"b":{"docs":{},"e":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239}}}}},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.010923535253227408},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.013513513513513514},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.030784508440913606},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.05555555555555555},"classes/Cell.html":{"ref":"classes/Cell.html","tf":5.030864197530864},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.050359712230215826},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}}}},"p":{"docs":{},"o":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.018518518518518517}},".":{"docs":{},"i":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}},"x":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.005958291956305859},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.016194331983805668}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":5.136363636363637},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}},"f":{"docs":{},"o":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02834008097165992},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.045454545454545456},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.02702702702702703}},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.03529411764705882},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.018018018018018018},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":5.008097165991903},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}},"r":{"docs":{},"m":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}},"i":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03007518796992481}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.004965243296921549},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.023391812865497075}}}}}},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.16},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.09523809523809523},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.14285714285714285},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.17647058823529413},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.09523809523809523},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.1568627450980392},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.09523809523809523},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.1568627450980392},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.09523809523809523},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0196078431372549},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.006951340615690168},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.013513513513513514},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.016194331983805668},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.017543859649122806},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.045454545454545456},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857}},"i":{"docs":{},"c":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745}},"/":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.04},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.023529411764705882},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0392156862745098},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0392156862745098}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024509803921568627}}}}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"b":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0196078431372549},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}}},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}}},"a":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.00893743793445879},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.09090909090909091},"modules.html":{"ref":"modules.html","tf":0.04},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.04},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.047619047619047616},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.023529411764705882},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0392156862745098},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0392156862745098},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.047619047619047616},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.05405405405405406},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.05128205128205128},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.05128205128205128},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.09090909090909091},"routes.html":{"ref":"routes.html","tf":0.15384615384615385},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.05714285714285714},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.014388489208633094},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.05405405405405406},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405},"coverage.html":{"ref":"coverage.html","tf":0.021739130434782608}},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"3":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}},"docs":{}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03007518796992481}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}}}},"p":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.004965243296921549},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"modules.html":{"ref":"modules.html","tf":10.02},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":5.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":5.023809523809524},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.010989010989011},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":5.011764705882353},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":5.023809523809524},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":5.019607843137255},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":5.023809523809524},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":5.019607843137255},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":5.023809523809524},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.09022556390977443}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"b":{"docs":{},"e":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}},"(":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"_":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"t":{"docs":{},"o":{"docs":{},"_":{"docs":{},"c":{"docs":{},"u":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.00893743793445879},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}}}}}}},"t":{"docs":{},"o":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}}}},"c":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.007944389275074478},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.01126126126126126}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.007518796992482}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.004965243296921549},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.01639344262295082},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.00980392156862745},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.017543859649122806}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":5.045454545454546}}}}}},"l":{"docs":{},"a":{"docs":{},"p":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.05405405405405406},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.05128205128205128},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.05128205128205128}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.00980392156862745}},"(":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.017543859649122806}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.014895729890764648},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}}}},"k":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}},"w":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009}},"e":{"docs":{},"r":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}}},"h":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}},"d":{"docs":{},"d":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.09090909090909091},"modules.html":{"ref":"modules.html","tf":0.04},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.04},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.047619047619047616},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.023529411764705882},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0392156862745098},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0392156862745098},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.047619047619047616},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.05405405405405406},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.05128205128205128},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.05128205128205128},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.09090909090909091},"routes.html":{"ref":"routes.html","tf":0.15384615384615385},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.05714285714285714},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.014388489208633094},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.05405405405405406},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405},"coverage.html":{"ref":"coverage.html","tf":0.021739130434782608}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.023833167825223437},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.01126126126126126},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0196078431372549},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.11428571428571428},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.043209876543209874},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.04316546762589928}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}},"d":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"(":{"docs":{},"'":{"docs":{},"\\":{"docs":{},"n":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{"routes.html":{"ref":"routes.html","tf":0.07692307692307693}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.07142857142857142},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.07142857142857142},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.07142857142857142},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.07142857142857142},"routes.html":{"ref":"routes.html","tf":10.076923076923077}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.047619047619047616},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.047619047619047616}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198}}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.045454545454545456},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857}}}},"w":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.012909632571996028},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.015432098765432098}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}},"l":{"docs":{},"e":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239}}}}},"g":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656}},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.023391812865497075}}}},"d":{"docs":{},"i":{"docs":{},"u":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}},"s":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"modules.html":{"ref":"modules.html","tf":0.18},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.045454545454545456},"modules.html":{"ref":"modules.html","tf":0.18},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.045454545454545456},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.02702702702702703}}}}},"n":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"/":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"/":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"/":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.02702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"/":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808}},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"q":{"docs":{},"u":{"docs":{},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.045454545454545456},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"/":{"docs":{},"n":{"docs":{},"g":{"docs":{},"x":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745}},")":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},".":{"8":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"docs":{}}},"1":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"docs":{}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.02252252252252252}},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024509803921568627}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024509803921568627}}}}}}},"e":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.00893743793445879},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.12030075187969924}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.004965243296921549},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}},"i":{"docs":{},"c":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}},"r":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.01126126126126126},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251}}}}}}}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.05405405405405406},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.05128205128205128},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.05128205128205128}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}}},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.024291497975708502}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.005958291956305859},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0196078431372549}},"o":{"docs":{},"r":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.05405405405405406},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.05128205128205128},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.05128205128205128}}}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.005958291956305859},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.01639344262295082},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0196078431372549},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.012345679012345678},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}},"l":{"docs":{},"(":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}},"(":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.014388489208633094}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745}}}}}}}},"w":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.013513513513513514},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.016194331983805668},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.09090909090909091},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.04},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.047619047619047616},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.023529411764705882},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0392156862745098},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0392156862745098},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.047619047619047616}}}}}},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.06},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.047619047619047616},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":5.054054054054054},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.02},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":5.04}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.02},"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.06},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":5.0476190476190474}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.05405405405405406}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.05405405405405406}}}}}}}}}}}}}},"v":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}},"p":{"docs":{},"p":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.05405405405405406},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.05128205128205128},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.016194331983805668},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.05128205128205128},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.02},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":5.021978021978022}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.054945054945054944},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.009803921568627},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":5.057142857142857},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"s":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549}}}}}},"r":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.045454545454545456}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.015765765765765764},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099}}}}}}}}}},"e":{"docs":{},"(":{"docs":{},"'":{"0":{"docs":{},".":{"5":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"docs":{}}},"1":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"docs":{}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045112781954887216}}}}}}},"d":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.019672131147540985},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.024291497975708502}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.00893743793445879},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.016194331983805668},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}}}}}}}}}},"w":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}},"e":{"docs":{},"a":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}},"s":{"docs":{},"k":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}},"h":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"/":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}},"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}},"3":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}},"docs":{}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}},"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}},"3":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}},"docs":{}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}},"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}},"3":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}},"docs":{}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{},"_":{"docs":{},"b":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}}}}}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}}},"g":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.025819265143992055},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.02622950819672131},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.03153153153153153},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.032388663967611336},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.03529411764705882},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.047619047619047616},"components/GamePage.html":{"ref":"components/GamePage.html","tf":5.004504504504505},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.02},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":5.023529411764706}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.02},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.03529411764705882},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":5.0476190476190474}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}},"m":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}},"t":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{},"h":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.08571428571428572}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}}}}}}}},"o":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.05128205128205128}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.058823529411764705},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"components/HomePage.html":{"ref":"components/HomePage.html","tf":5.051282051282051},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.02},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":5.03921568627451}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.02},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.058823529411764705},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":5.0476190476190474}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.05128205128205128}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.05128205128205128}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}}},"e":{"docs":{},"x":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.024691358024691357}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.03529411764705882},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":5.006535947712418},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.005958291956305859},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.012345679012345678}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.015432098765432098}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"a":{"docs":{},"d":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}}},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.013513513513513514}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.05128205128205128}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.058823529411764705},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.047619047619047616},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":5.051282051282051},"routes.html":{"ref":"routes.html","tf":0.07692307692307693},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.02},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":5.03921568627451}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.02},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.058823529411764705},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":5.0476190476190474}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808}},"e":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.05128205128205128}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.05128205128205128}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656}},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.05405405405405406},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.05128205128205128},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.05128205128205128}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}},"u":{"docs":{},"r":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.016339869281045753},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.04093567251461988}},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.00980392156862745}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0196078431372549}}}}}}}}}},"i":{"docs":{"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.02702702702702703}},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.02287581699346405},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02877697841726619}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}},"s":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"r":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.024691358024691357}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02877697841726619}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.014388489208633094}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}}}}}}}}}}}}},"n":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.012345679012345678}}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}}}}}}},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"h":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}},"s":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.012345679012345678}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.005958291956305859}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.004965243296921549}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164}}}}}}}}}}}}}},"b":{"docs":{},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}}}}}}}},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.024691358024691357}}}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"w":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"e":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}}}}}}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.012345679012345678}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}}}}}}}}},"x":{"docs":{"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.02702702702702703}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024509803921568627},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}},"m":{"docs":{},"e":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.004965243296921549},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.016194331983805668}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.022950819672131147},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.02834008097165992}}}}}}}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}}}},"p":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}},"i":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}},"i":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}},"w":{"docs":{},"o":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.006951340615690168},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0196078431372549},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.017543859649122806},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}}},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.04},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.023529411764705882},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0392156862745098},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0392156862745098},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.004965243296921549},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.01126126126126126},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.012345679012345678},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.007518796992481203}}}}}},"i":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.045112781954887216}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}},"b":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}},"i":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}},".":{"docs":{},"b":{"docs":{},"o":{"docs":{},"d":{"docs":{},"y":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"_":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}},"e":{"2":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}},"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513}},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.047619047619047616},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.047619047619047616},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.045454545454545456},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.02702702702702703}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}}}},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}}},"r":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03007518796992481}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.01126126126126126}}}}},"(":{"docs":{},"b":{"docs":{},"y":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.006951340615690168},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.019672131147540985},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}},"y":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.007944389275074478},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.016339869281045753},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.029239766081871343}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.007944389275074478},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.022950819672131147},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.00980392156862745},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.017543859649122806}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.02},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.011764705882352941},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0196078431372549},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0196078431372549},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564},"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.045454545454545456},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.02702702702702703},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03007518796992481}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}},"s":{"docs":{},"h":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009}}}}},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"s":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.04},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.023529411764705882},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0392156862745098},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0392156862745098}}}}}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}},"l":{"docs":{},"s":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02158273381294964}}}}},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}},"s":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03007518796992481}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.02702702702702703}},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}}}}},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}},"u":{"docs":{},"x":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}}},"n":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/AboutPageModule.html":{"ref":"modules/AboutPageModule.html","tf":0.04},"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.047619047619047616},"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198},"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.023529411764705882},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.047619047619047616},"modules/HomePageModule.html":{"ref":"modules/HomePageModule.html","tf":0.0392156862745098},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.047619047619047616},"modules/TeamPageModule.html":{"ref":"modules/TeamPageModule.html","tf":0.0392156862745098},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.047619047619047616}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AboutPage.html":{"ref":"components/AboutPage.html","tf":0.02702702702702703},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/HomePage.html":{"ref":"components/HomePage.html","tf":0.02564102564102564},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"components/TeamPage.html":{"ref":"components/TeamPage.html","tf":0.02564102564102564}}}}}},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"/":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{},"m":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099}}}}}},"i":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.05714285714285714}}}}}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.022840119165839126},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.02622950819672131},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.02027027027027027},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.016194331983805668},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.06790123456790123},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.014388489208633094},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.21621621621621623}},"h":{"docs":{},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}},"b":{"docs":{},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"g":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}}},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}}},"e":{"docs":{},"w":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.006951340615690168},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.014388489208633094}},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.006951340615690168},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.019672131147540985}}}}}},"d":{"docs":{},"e":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}},"n":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.015432098765432098}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"modules/AboutPageRoutingModule.html":{"ref":"modules/AboutPageRoutingModule.html","tf":0.023809523809523808},"modules/GamePageRoutingModule.html":{"ref":"modules/GamePageRoutingModule.html","tf":0.023809523809523808},"modules/HomePageRoutingModule.html":{"ref":"modules/HomePageRoutingModule.html","tf":0.023809523809523808},"modules/TeamPageRoutingModule.html":{"ref":"modules/TeamPageRoutingModule.html","tf":0.023809523809523808},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"routes.html":{"ref":"routes.html","tf":0.07692307692307693}},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"routes.html":{"ref":"routes.html","tf":0.07692307692307693}}}}}}}}},"g":{"docs":{},"e":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}},".":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}},"e":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.00893743793445879},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.019672131147540985},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.026143790849673203},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.04678362573099415}}}}},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.02197802197802198}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":0.045454545454545456}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.00980392156862745},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.02702702702702703}}}}}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.02857142857142857}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}},"e":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745}},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"k":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"(":{"docs":{},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251}}}}}}}}}},"s":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.014705882352941176},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.018018018018018018},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.014388489208633094}}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.03773584905660377},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.013114754098360656},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.04048582995951417},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.08771929824561403},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":5.028776978417266},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"modules/GamePageModule.html":{"ref":"modules/GamePageModule.html","tf":0.03529411764705882},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":5.011695906432749},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251}}}}}}}}},"'":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}}},"s":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537}}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0196078431372549}}}}}}},"y":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.009930486593843098},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}},".":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}},"e":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.019860973187686197},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.0392156862745098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.024390243902439025}}}}}},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"w":{"docs":{},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}}}},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.009259259259259259}}}}}},"o":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.015432098765432098},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.014388489208633094},"classes/Pos.html":{"ref":"classes/Pos.html","tf":5.054054054054054},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.01787487586891758}}}}}}},"s":{"docs":{},"e":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}},"(":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"o":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}}}},"u":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.006951340615690168},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/AppModule.html":{"ref":"modules/AppModule.html","tf":0.01098901098901099}}}}}}},"r":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.013513513513513514},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602}},"'":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}},".":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}}}}},"r":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024509803921568627}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.005958291956305859},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}}},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.016194331983805668}}}}},"n":{"docs":{},"e":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}}}},"a":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.009009009009009009},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.006756756756756757},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.008097165991902834}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}},"t":{"docs":{},"'":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/QuoteService.html":{"ref":"injectables/QuoteService.html","tf":5.090909090909091},"coverage.html":{"ref":"coverage.html","tf":0.010869565217391304}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.006557377049180328}},"u":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.020854021847070508},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.01639344262295082},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.02927927927927928},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.012345679012345678},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.007518796992481203}}}},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.013071895424836602},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.011695906432748537},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.007518796992481203}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024509803921568627},"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.024826216484607744},"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.009836065573770493},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.013513513513513514},"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.00980392156862745},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.012145748987854251},"components/PenguinComponent.html":{"ref":"components/PenguinComponent.html","tf":0.005847953216374269},"classes/AppPage.html":{"ref":"classes/AppPage.html","tf":0.05714285714285714},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.024691358024691357},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02877697841726619}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239}}}}}}},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}},"(":{"docs":{},"'":{"docs":{},"d":{"docs":{},"i":{"docs":{},"v":{"docs":{},"h":{"docs":{},"u":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0022522522522522522}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.0045045045045045045}}}}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"'":{"docs":{},")":{"docs":{},"[":{"1":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.004901960784313725}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"(":{"docs":{},"'":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.00980392156862745}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839}}}}}},"a":{"docs":{},"s":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"components/ConsoleComponent.html":{"ref":"components/ConsoleComponent.html","tf":0.012195121951219513},"components/GamePage.html":{"ref":"components/GamePage.html","tf":0.01126126126126126},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239}}}}},"m":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}}}}}},"o":{"docs":{},"v":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0029791459781529296},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.02877697841726619}}}}}}}},"o":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196},"classes/Penguin.html":{"ref":"classes/Penguin.html","tf":0.007194244604316547}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.012345679012345678}},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}}}}}}}}}}}}},"y":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.003972194637537239}}},"n":{"docs":{},"t":{"docs":{"components/ControlComponent.html":{"ref":"components/ControlComponent.html","tf":0.003278688524590164},"components/InfoComponent.html":{"ref":"components/InfoComponent.html","tf":0.004048582995951417}}}},"i":{"docs":{},"t":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.0032679738562091504}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196}}}}}}}},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.0030864197530864196}}}}},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.015037593984962405}}}}}}},"_":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0009930486593843098}}},"x":{"docs":{"components/BoardComponent.html":{"ref":"components/BoardComponent.html","tf":0.0019860973187686196},"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.10810810810810811}}},"k":{"docs":{},"n":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/HexComponent.html":{"ref":"components/HexComponent.html","tf":0.006535947712418301}}}}}},"y":{"docs":{"classes/Cell.html":{"ref":"classes/Cell.html","tf":0.006172839506172839},"classes/Pos.html":{"ref":"classes/Pos.html","tf":0.16216216216216217}}}},"length":1811},"corpusTokens":["0","0.5","0/0","0/1","0/10","0/2","0/20","0/8","1","100","1000","11","17","18/19","2","2/2","2000","2d","33","4","41","46/49","6","6/6","6x6","7","7/7","81","8x8","9","9/10","9/11","90","93","94","99","_","about.pag","about.page.html","about.page.scss","aboutpag","aboutpagemodul","aboutpageroutingmodul","abov","access","accordingli","action","add","addhexagon","afterviewinit","agrement","alert","alert.pres","alertcontrol","allow","angular","angular/anim","angular/common","angular/cor","angular/form","angular/platform","angular/rout","anim","animate('0.5","animate('1","animations/nav","app","app.compon","app.component.html","app.component.scss","appcompon","applic","appmachin","appmodul","apppag","approutingmodul","appservic","appservice.send(appservice.machine.states.initpospenguin.on.penguinsposed[0].eventtyp","appservice.send(appservice.machine.states.settings.on.nextstep[0].eventtyp","appservice.state.valu","area","arraw","array","array(this.nbpenguin","array(this.numberhexagonalvalu","art","ask","assets/game/available_fish1.png","assets/game/available_fish2.png","assets/game/available_fish3.png","assets/game/empty.png","assets/game/normal_fish1.png","assets/game/normal_fish2.png","assets/game/normal_fish3.png","assets/game/selected_fish1.png","assets/game/selected_fish2.png","assets/game/selected_fish3.png","assets/game/tilesnow_big.png","assets/penguin.png","assets/penguin_enemie.png","assets/penguin_selected.png","async","asynchron","avail","availableindex","await","bar/ngx","base","begin","best","bestmov","bind","board","board.component.html","board.component.scss","board.creat","board/board.compon","board/hex/hex.compon","board/models/appmachin","board/models/gamemachin","board/models/penguin","board/penguin/penguin.compon","boardcompon","bookmark","boolean","bootstrap","bottom","box","brows","browser","browser.get(destin","browser/anim","browseranimationsmodul","browsermodul","button","c","calcul","call","cancel","catch","cell","cellclick","cellpo","cellposit","center","center.i","center.x","chang","changement","check","chex","class","click","code","code.set","color","column","commonmodul","compon","componennt","components,then","confirm","consol","console.component.html","console.component.scss","console.log(","console.log(\"getcellcent","console.log('&#x1f389","console.log('board","console.log('cancel","console.log('confirm","console.log('dark","console.log('gam","console.log('gener","console.log('init","console.log(this.cell.tostr","console.log(this.console_output","console.log(this.penguin.tostr","console.log(this.tostr","console/console.compon","console_output","consolecompon","const","constraint","constructor","constructor(alertcontrol","constructor(platform","constructor(priv","constructor(row","constructor(toastcontrol","constructor(x","contain","content')).gettext","context","continu","control","control.component.html","control.component.scss","control/control.compon","controlcompon","coordin","count","coverag","creat","cube","curent","current","currentplayerid","custom","dark","darkthem","declar","decreas","default","defin","delet","depend","describ","descript","destin","destroy","document","document.addeventlistener('mcts_consol","document.addeventlistener('new_best_mov","document.body.classlist.toggle('dark","durat","e","e.detail.replace(new","e2e/src/app.po.t","each","element","element(by.deepcss('app","elementref","emitt","empti","emptyindex","enter","enteranim","entrycompon","environ","error","even","event","eventemitt","eventlisten","export","extend","fake","fals","featur","file","final","first","fish","flip","fliphumanscor","flipmctsscor","flipscor","flux","formsmodul","front","fsm","function","g","game","game.pag","game.page.html","game.page.scss","gamemachin","gamepag","gamepagemodul","gamepageroutingmodul","gameservic","gameservice.state.valu","gamestart","gener","generatemap","generatemapfromwasmboard","generatewasmpenguin","genrat","getbestmoveandprocess","getcellcent","gethexheight","gethexwidth","getparagraphtext","go","handler","haspenguin","height","hex","hex.component.html","hex.component.scss","hexagon","hexagonal.add","hexagonal.remov","hexbottompad","hexcompon","hexheight","hexsiz","hexwidth","home","home.pag","home.page.html","home.page.scss","homepag","homepagemodul","homepageroutingmodul","hover","human","humanplayerid","ia","icon","id","identifi","if(this.numberhexagonalvalu","if(this.playertoplay","ignor","implement","import","increas","index","info","info.component.html","info.component.scss","info/info.compon","infocompon","inform","init","initgameboard","initi","initialize.gener","initializeapp","initpospenguin","initwasmboard","inject","input","ion","ionic","ionic/angular","ionicmodul","ionicmodule.forroot","ionicroutestrategi","isavail","isgon","isload","isometr","isselect","isvis","isweb","it.then","know","launch","launchgam","leav","let'","line","listen","littl","load","machin","machine.som","map","map/textur","match","matchmedia","math.sqrt(3","mct","mcts.final","mcts.two","mctsconstraint","mctsplayer","media","messag","metadata","method","miscellan","mode","models/appmachin","models/cel","models/gamemachin","models/penguin","modul","module.hex_axial_to_cube(this.wasmpenguin.getcurrentcell().getposit","module.hex_cube_to_offset","module.hex_cube_to_offset(module.hex_axial_to_cube(this.wasmcell.getposit","module.penguin_mctsplayer(this.wasmgam","module.penguingame(this.numberhexagonalvalu","mous","move","moveblock","moveperform","moveto","moveto(newcel","movetoanim","native/splash","native/statu","navanim","navigateto","navigateto(destin","nbfish","nbhexagon","nbhumanfish","nbmctsfish","nbpenguin","necessari","new","newcel","newcell.getcellcent","newcell.tostr","newpenguinclick","newstatu","next","nextstep","ngmodul","ngondestroy","ngoninit","node","non","normalindex","notifi","noun","null","number","numberhexagon","numberhexagonal(val:numb","numberhexagonalchang","numberhexagonalvalu","numberpenguin","numberpenguin(val:numb","numberpenguinchang","numberpenguinvalu","object","odd","oh","ok","on","oncellclick","oncellclick(cellclick","oncellhov","oncellhover(hov","oninit","onpenguinclick","onpenguinclick(newpenguinclick","opac","other","out","output","over","overlap","overview","own","owner","page","page.title.tolowercas","param","paramet","parent","part","path","path.tolowercas","pathmatch","penguin","penguin'","penguin.component.html","penguin.component.scss","penguinclick","penguincompon","penguinpos","penguinselect","penguinsnotpos","peopl","perform","performed.then","permit","pixel","platform","play","play.then","player","playerpenguin","playertoplay","playturn","playwasmmov","po","pointer","pose","posepenguinon","posepenguinon(cellpo","posit","possibl","prefer","prefersdark","prefersdark.addlistener(mediaqueri","presentconfirm","presenterrortoast","presenterrortoast(messag","presentsuccesstoast","presentsuccesstoast(messag","presenttoast","press","privat","process","processbestmov","processbestmove(bestmov","project","properti","protractor","provid","providedin","public","purchas","put","putpenguinonwasmboard","queri","quoteservic","radiu","rais","random","rang","rangehexagon","rangehexagonal(val:numb","rangehexagonalchang","rangehexagonalvalu","rangepenguin","rangepenguin(val:numb","rangepenguinchang","rangepenguinvalu","react","reaction","read","redirectto","refer","referenc","regexp('\\n","remov","removehexagon","repres","reset","result","return","right","role","root","rout","routereusestrategi","routermodul","routermodule.forchild(rout","routing.modul","routing.module.t","row","row.then","scale(0.8","scale(1","scheme","scheme)').media","score","scorehuman","scoremct","screen/ngx","select","selectedindex","selector","sent","servic","set","set/remov","setavailablecellcolor","setavailablecellcolor(set","setavailablecolor","setavailablecolor(set","setselectedcolor","setselectedcolor(newstatu","setselectedcolor(set","setselectedpenguincolor","setselectedpenguincolor(set","setwasmcel","setwasmcell(wasmcel","setwasmpenguin","setwasmpenguin(wasmpenguin","shouldadd","show","singl","size","son","sourc","specifi","splashscreen","src/app/app.component.t","src/app/app.module.t","src/app/pages/about/about","src/app/pages/about/about.module.t","src/app/pages/about/about.page.t","src/app/pages/game/board/board.component.t","src/app/pages/game/board/hex/hex.component.t","src/app/pages/game/board/models/cell.t","src/app/pages/game/board/models/penguin.t","src/app/pages/game/board/models/pos.t","src/app/pages/game/board/penguin/penguin.component.t","src/app/pages/game/console/console.component.t","src/app/pages/game/control/control.component.t","src/app/pages/game/gam","src/app/pages/game/game.module.t","src/app/pages/game/game.page.t","src/app/pages/game/info/info.component.t","src/app/pages/home/hom","src/app/pages/home/home.module.t","src/app/pages/home/home.page.t","src/app/pages/team/team","src/app/pages/team/team.module.t","src/app/pages/team/team.page.t","src/app/services/quote.service.t","stagger","start","startconfirm","startwasmgam","state","statecontrol","statement","static","statu","statusbar","stock","string","style","styleurl","success","support","svg","switch","switchcurrentplay","switchpenguincolor","switchplayertoplay","symbol","system","target","team","team.pag","team.page.html","team.page.scss","teampag","teampagemodul","teampageroutingmodul","templat","templateurl","terrain","terrainindex","terraintyp","terraintype.specifi","text","textur","textureindex","theme","this.alertcontroller.cr","this.apppages.findindex(pag","this.boardcomponent.initwasmboard","this.boardcomponent.startwasmgam","this.cel","this.cell.isavail","this.cell.setselectedcolor(fals","this.cell.setselectedcolor(tru","this.cell.terrainindex","this.cellclicked.emit(this.cel","this.cellposit","this.cellposition.column","this.cellposition.haspenguin","this.cellposition.isgon","this.cellposition.row","this.cellposition.tostr","this.cent","this.column","this.console_output","this.currentplayerid","this.darkthem","this.fliphumanscor","this.fliphumanscore.flipto","this.flipmctsscor","this.flipmctsscore.flipto","this.flipscor","this.gamestart","this.generatemap","this.generatemapfromwasmboard","this.generatewasmpenguin","this.getcellcent","this.haspenguin","this.hexheight","this.hexs","this.hexwidth","this.humanplayerid","this.i","this.infocomponent.penguinpos","this.initializeapp","this.isavail","this.isload","this.isselect","this.isvis","this.launchgame.emit","this.nbfish","this.nbhumanfish","this.nbmctsfish","this.nextstep.emit","this.numberhexagonalvalu","this.numberpenguinchange.emit(this.numberpenguinvalu","this.numberpenguinvalu","this.penguin","this.penguinclicked.emit(this.penguin","this.penguinsnotpos","this.penguinsnotposed.pop","this.platform.ready().then","this.playertoplay","this.playturn","this.presenttoast","this.processbestmove(this.wasmmctsplayer.getlastbestmov","this.putpenguinonwasmboard","this.rangehexagonalchange.emit(this.rangehexagonalvalu","this.rangehexagonalvalu","this.rangepenguinchange.emit(this.rangepenguinvalu","this.rangepenguinvalu","this.row","this.scorehuman.nativeel","this.scoremcts.nativeel","this.selectedindex","this.setselectedcolor(hov","this.splashscreen.hid","this.statusbar.styledefault","this.terrainindex","this.textureindex","this.toastcontroller.cr","this.toggledarktheme(mediaquery.match","this.toggledarktheme(prefersdark.match","this.toggledarktheme(this.darkthem","this.wasmboard","this.wasmboard.getpawnsonboard","this.wasmcel","this.wasmcell.getfish","this.wasmcell.isgon","this.wasmgam","this.wasmgame.delet","this.wasmgame.getboard","this.wasmgame.getfirstplayertoplay","this.wasmmctsplay","this.wasmpenguin","this.wasmpenguin.getowner().getid","this.x","time","titl","toast","toast.pres","toastcontrol","toggledarkthem","toggledarktheme(shouldadd","togglethem","top","tostr","transform","transit","transition('ent","transition('leav","tree","trigger","trigger('initanim","true","turn.show","two","type","undefin","updat","url","us","useclass","user","user'","user.two","val","valu","var","variabl","vector","view","viewchild","viewchild('divhuman","viewchild('divmct","viewchild(boardcompon","viewchild(infocompon","visual","void","wait","want","wasm","wasmboard","wasmcel","wasmcell.getfish","wasmgam","wasmmctsplay","wasmmov","wasmpenguin","wasmpo","wasmpos.column","wasmpos.row","way","whole","width","window","window.location.pathname.split('pages/')[1","window.matchmedia('(pref","work","written","x","y","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        \n                            9 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        11 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            4 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n        \n            \n                \n                    AboutPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    AboutPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    AppModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    GamePageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    GamePageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    HomePageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    HomePageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TeamPageModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n        \n            \n                \n                    TeamPageRoutingModule\n                \n                \n                    \n                        \n                                Your browser does not support SVG\n                        \n                    \n                    \n                        Browse\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n  Modules\n  AboutPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AboutPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AboutPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\n\nimport { AboutPage } from './about.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n  Modules\n  AboutPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n  Modules\n  AppModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { RouterModule } from '@angular/router';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { enterAnimation } from './animations/nav-animation';\n\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [AppComponent],\n  entryComponents: [],\n  imports: [\n    RouterModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    IonicModule.forRoot({\n      navAnimation: enterAnimation\n    }),\n    AppRoutingModule\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GamePageModule.html":{"url":"modules/GamePageModule.html","title":"module - GamePageModule","body":"\n                   \n\n\n  Modules\n  GamePageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/game/game.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GamePage\n                            \n                            \n                                BoardComponent\n                            \n                            \n                                InfoComponent\n                            \n                            \n                                ControlComponent\n                            \n                            \n                                ConsoleComponent\n                            \n                            \n                                HexComponent\n                            \n                            \n                                PenguinComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    GamePageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { GamePageRoutingModule } from './game-routing.module';\n\nimport { GamePage } from './game.page';\nimport { BoardComponent } from './board/board.component';\nimport { ControlComponent } from './control/control.component';\nimport { ConsoleComponent } from './console/console.component';\nimport { HexComponent } from './board/hex/hex.component';\nimport { PenguinComponent } from './board/penguin/penguin.component';\nimport { InfoComponent } from './info/info.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    GamePageRoutingModule\n  ],\n  declarations: [\n    GamePage,\n    BoardComponent,\n    InfoComponent,\n    ControlComponent,\n    ConsoleComponent,\n    HexComponent,\n    PenguinComponent\n  ]\n})\nexport class GamePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GamePageRoutingModule.html":{"url":"modules/GamePageRoutingModule.html","title":"module - GamePageRoutingModule","body":"\n                   \n\n\n  Modules\n  GamePageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/game/game-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { GamePage } from './game.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: GamePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class GamePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n  Modules\n  HomePageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                HomePage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    HomePageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { HomePageRoutingModule } from './home-routing.module';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n  Modules\n  HomePageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamPageModule.html":{"url":"modules/TeamPageModule.html","title":"module - TeamPageModule","body":"\n                   \n\n\n  Modules\n  TeamPageModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/team/team.module.ts\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TeamPage\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    TeamPageRoutingModule\n                            \n                    \n                \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TeamPageRoutingModule } from './team-routing.module';\n\nimport { TeamPage } from './team.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TeamPageRoutingModule\n  ],\n  declarations: [TeamPage]\n})\nexport class TeamPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TeamPageRoutingModule.html":{"url":"modules/TeamPageRoutingModule.html","title":"module - TeamPageRoutingModule","body":"\n                   \n\n\n  Modules\n  TeamPageRoutingModule\n\n\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/team/team-routing.module.ts\n        \n\n\n        \n            \n            \n        \n    \n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TeamPage } from './team.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TeamPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TeamPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n  Components\n  AboutPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n            \n                styleUrls\n                about.page.scss\n            \n\n\n\n            \n                templateUrl\n                about.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(platform: Platform, splashScreen: SplashScreen, statusBar: StatusBar)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             initializeApp\n                        \n                    \n    \n                    \n                        \n    initializeApp()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             toggleDarkTheme\n                        \n                    \n    \n                    \n                        \n    toggleDarkTheme(shouldAdd: boolean)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             toggleTheme\n                        \n                    \n    \n                    \n                        \n    toggleTheme()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public appPages\n                        \n                    \n                    \n                        \n                            appPages:     { title: string; url: string; icon: string; }[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public darkTheme\n                        \n                    \n                    \n                        \n                            darkTheme:     boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Public isWeb\n                        \n                    \n                    \n                        \n                            isWeb:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: true\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Public selectedIndex\n                        \n                    \n                    \n                        \n                            selectedIndex:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  public selectedIndex = 0;\n  public appPages = [\n    {\n      title: 'Home',\n      url: '/home',\n      icon: 'home'\n    },\n    {\n      title: 'Game',\n      url: '/game',\n      icon: 'cube'\n    },\n    {\n      title: 'Team',\n      url: '/team',\n      icon: 'people'\n    },\n    {\n      title: 'About',\n      url: '/about',\n      icon: 'bookmarks'\n    }\n  ];\n\n  public isWeb = true;\n\n  public darkTheme: boolean;\n\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    if (window.matchMedia('(prefers-color-scheme)').media !== 'not all') {\n      console.log('&#x1F389; Dark mode is supported');\n    }\n\n    // Use matchMedia to check the user preference\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)');\n\n    this.toggleDarkTheme(prefersDark.matches);\n\n    // Listen for changes to the prefers-color-scheme media query\n    prefersDark.addListener(mediaQuery => this.toggleDarkTheme(mediaQuery.matches));\n\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  ngOnInit() {\n    const path = window.location.pathname.split('pages/')[1];\n    if (path !== undefined) {\n      this.selectedIndex = this.appPages.findIndex(page => page.title.toLowerCase() === path.toLowerCase());\n    }\n  }\n\n  // Called when the app loads\n  toggleDarkTheme(shouldAdd: boolean): void {\n    this.darkTheme = shouldAdd;\n    console.log('Dark Theme switch');\n    document.body.classList.toggle('dark', shouldAdd);\n  }\n\n  toggleTheme(): void {\n    console.log('Dark theme : ' + this.darkTheme);\n    this.darkTheme = !this.darkTheme;\n    this.toggleDarkTheme(this.darkTheme);\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BoardComponent.html":{"url":"components/BoardComponent.html","title":"component - BoardComponent","body":"\n                   \n\n\n\n  Components\n  BoardComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/game/board/board.component.ts\n\n\n    \n        Description\n    \n    \n        Component for all the components about the Penguin Game.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-board\n            \n\n            \n                styleUrls\n                board.component.scss\n            \n\n\n\n            \n                templateUrl\n                board.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            gameStarted\n                        \n                        \n                            Value to check if the game has been started by the user.Two-way bindings with the game component.\n\n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            nbHumanFish\n                        \n                        \n                            Value to count the fishes owned by the user.Two-way bindings with the game component.\n\n                              \n                                Type:    number\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            nbMctsFish\n                        \n                        \n                            Value to count the fishes owned by the mcts.Two-way bindings with the game component.\n\n                              \n                                Type:    number\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            numberHexagonal\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            numberPenguin\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            numberHexagonalChange\n                        \n                        \n                            Emitter to notify the parent Game Component, when the number of hexagonals changed.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            numberPenguinChange\n                        \n                        \n                            Emitter to notify the parent Game Component, when the number of penguins changed.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            penguinPosed\n                        \n                        \n                            Emitter to the game component to notify when the user posed one of his penguins.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            switchPlayerToPlay\n                        \n                        \n                            Emitter to the game component to notify when the player to play changed.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(toastController: ToastController)\n                        \n                    \n    \n                    \n                        \n                                \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             initWasmBoard\n                        \n                    \n    \n                    \n                        \n    initWasmBoard()\n                        \n                    \n    \n                    \n                        \n                                Get the random board genrated by the C++ code.Set the current player Id, the human player id, in agrement with the first player which has to play.Then call the generateMapFromWasmBoard function to update the front part.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             startWasmGame\n                        \n                    \n    \n                    \n                        \n    startWasmGame()\n                        \n                    \n    \n                    \n                        \n                                Get a random vector of penguins generated in C++, when the IA penguins has to be initialize.Generate the penguins of the Mcts player and then put these in the board.Create the C++ object to use the MCTS.Finally, launch the game !\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             generateMap\n                        \n                    \n    \n                    \n                        \n    generateMap()\n                        \n                    \n    \n                    \n                        \n                                Create an empty map, with a size of the hexagonals number, and with x penguins.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             posePenguinOn\n                        \n                    \n    \n                    \n                        \n    posePenguinOn(cellPos: Cell)\n                        \n                    \n    \n                    \n                        \n                                Pose a penguin, not put yet, in the cell in parameter. \n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        cellPos\n                                                            :     Cell\n    \n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             generateMapFromWasmBoard\n                        \n                    \n    \n                    \n                        \n    generateMapFromWasmBoard()\n                        \n                    \n    \n                    \n                        \n                                Update the fish number on all the cells on the board, accordingly with the C++ board.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             generateWasmPenguin\n                        \n                    \n    \n                    \n                        \n    generateWasmPenguin()\n                        \n                    \n    \n                    \n                        \n                                Generate the penguins for the wasm player.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             putPenguinOnWasmBoard\n                        \n                    \n    \n                    \n                        \n    putPenguinOnWasmBoard()\n                        \n                    \n    \n                    \n                        \n                                Put the penguin on the right cell in C++, with a fake move.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             playTurn\n                        \n                    \n    \n                    \n                        \n    playTurn()\n                        \n                    \n    \n                    \n                        \n                                Allow each player to play, when it is his turn.Show a little toast to alert the user.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getBestMoveAndProcess\n                        \n                    \n    \n                    \n                        \n    getBestMoveAndProcess()\n                        \n                    \n    \n                    \n                        \n                                Ask the MCTS PLayer to get the best move to play and go on with the event\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             processBestMove\n                        \n                    \n    \n                    \n                        \n    processBestMove(bestMove: any)\n                        \n                    \n    \n                    \n                        \n                                Process the best Move event sent on document\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        bestMove\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             playWasmMove\n                        \n                    \n    \n                    \n                        \n    playWasmMove()\n                        \n                    \n    \n                    \n                        \n                                Play a move in the C++ game, then update the tree.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             switchCurrentPlayer\n                        \n                    \n    \n                    \n                        \n    switchCurrentPlayer()\n                        \n                    \n    \n                    \n                        \n                                Switch the id of the current player, accordingly with the changement in the C++ game.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             movePerformed\n                        \n                    \n    \n                    \n                        \n    movePerformed()\n                        \n                    \n    \n                    \n                        \n                                Check the game status, after a move was performed.Then react in agrement with the wasm return.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onPenguinClick\n                        \n                    \n    \n                    \n                        \n    onPenguinClick(newPenguinClicked: Penguin)\n                        \n                    \n    \n                    \n                        \n                                React on the click event on a penguin. The reaction depends of the current state of the stateControler and the game State Machine.Some features are only available on our own penguins.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        newPenguinClicked\n                                                            :     Penguin\n    \n                                                    \n                                                    \n                                                        pointer on the penguin selected\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onCellClick\n                        \n                    \n    \n                    \n                        \n    onCellClick(cellClicked: Cell)\n                        \n                    \n    \n                    \n                        \n                                React on the click event on a cell. The reaction depends of the current state of the stateControler and the game State Machine.Some features are only available when a penguin are selected or not.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        cellClicked\n                                                            :     Cell\n    \n                                                    \n                                                    \n                                                        pointer on the cell clicked\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setSelectedPenguinColor\n                        \n                    \n    \n                    \n                        \n    setSelectedPenguinColor(set: boolean)\n                        \n                    \n    \n                    \n                        \n                                Set/Remove the color penguin, if he is selected or not.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        set\n                                                    \n                                                    \n                                                        if the penguin had to be colorized or not\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setAvailableCellColor\n                        \n                    \n    \n                    \n                        \n    setAvailableCellColor(set: boolean)\n                        \n                    \n    \n                    \n                        \n                                Set/Remove the color cell, if he is selected or not.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        set\n                                                    \n                                                    \n                                                        if the cell had to be colorized or not\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addHexagonal\n                        \n                    \n    \n                    \n                        \n    addHexagonal()\n                        \n                    \n    \n                    \n                        \n                                Increase the number of hexagonal.Add a cell on each row, and initialize it.Then add a row.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removeHexagonal\n                        \n                    \n    \n                    \n                        \n    removeHexagonal()\n                        \n                    \n    \n                    \n                        \n                                Decrease the number of hexagonal.Remove a cell on each row.Then Remove a row.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentSuccessToast\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentSuccessToast(message: string)\n                        \n                    \n    \n                    \n                        \n                                Create a toast, in the top of the window, using the success theme.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        message\n                                                    \n                                                    \n                                                        that will be written in the toast\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentErrorToast\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentErrorToast(message: string)\n                        \n                    \n    \n                    \n                        \n                                Create a toast, in the top of the window, using the error theme.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        message\n                                                    \n                                                    \n                                                        that will be written in the toast\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             cellClicked\n                        \n                    \n                    \n                        \n                            cellClicked:     Cell\n    \n                        \n                    \n                    \n                        \n                            Pointer to the current cell clicked by the curent player to play.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             cells\n                        \n                    \n                    \n                        \n                            cells:     Cell[][]\n    \n                        \n                    \n                    \n                        \n                            2D Array with all the cells on the map (row of column).\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentPlayerId\n                        \n                    \n                    \n                        \n                            currentPlayerId:     number\n    \n                        \n                    \n                    \n                        \n                            Value of the current player id.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             hexHeight\n                        \n                    \n                    \n                        \n                            hexHeight:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 90\n                            \n                        \n                    \n                        \n                            The pixel height of a hex.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             hexWidth\n                        \n                    \n                    \n                        \n                            hexWidth:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 90\n                            \n                        \n                    \n                        \n                            The pixel width of a hex.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             humanPlayerId\n                        \n                    \n                    \n                        \n                            humanPlayerId:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 1\n                            \n                        \n                    \n                        \n                            Value of the user's id.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isLoaded\n                        \n                    \n                    \n                        \n                            isLoaded:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             mctsConstraints\n                        \n                    \n                    \n                        \n                            mctsConstraints:     any\n    \n                        \n                    \n                    \n                        \n                            Pointer to the C++ object, which contains the constraints for the MCTS.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             numberHexagonalValue\n                        \n                    \n                    \n                        \n                            numberHexagonalValue:     number\n    \n                        \n                    \n                    \n                        \n                            Value of the Hexagonal Range element in the template.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             numberPenguinValue\n                        \n                    \n                    \n                        \n                            numberPenguinValue:     number\n    \n                        \n                    \n                    \n                        \n                            Value of the Penguin Range element in the template.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             penguins\n                        \n                    \n                    \n                        \n                            penguins:     Penguin[]\n    \n                        \n                    \n                    \n                        \n                            Array with all the penguins on the board.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             penguinSelected\n                        \n                    \n                    \n                        \n                            penguinSelected:     Penguin\n    \n                        \n                    \n                    \n                        \n                            Pointer to the current penguin selected by the curent player to play.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             stateControler\n                        \n                    \n                    \n                        \n                            stateControler:     any\n    \n                        \n                    \n                        \n                            \n                                Default value: appService\n                            \n                        \n                    \n                        \n                            Value to bind the State Controler FSM and to use its value.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             wasmBoard\n                        \n                    \n                    \n                        \n                            wasmBoard:     any\n    \n                        \n                    \n                    \n                        \n                            Pointer to the C++ object : Board.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             wasmGame\n                        \n                    \n                    \n                        \n                            wasmGame:     any\n    \n                        \n                    \n                    \n                        \n                            Pointer to the C++ object : Game.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             wasmMCTSPlayer\n                        \n                    \n                    \n                        \n                            wasmMCTSPlayer:     any\n    \n                        \n                    \n                    \n                        \n                            Pointer to the C++ object : MCTSPlayer.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             wasmMove\n                        \n                    \n                    \n                        \n                            wasmMove:     any\n    \n                        \n                    \n                    \n                        \n                            Pointer to the C++ object : Move, to be able to perform a move and update the MCTS tree.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             wasmPenguins\n                        \n                    \n                    \n                        \n                            wasmPenguins:     any\n    \n                        \n                    \n                    \n                        \n                            Pointer to the C++ object : vector.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { trigger, transition, animate, style, query, stagger, state } from '@angular/animations';\nimport { ToastController } from '@ionic/angular';\n\nimport { Cell } from './models/cell';\nimport { Penguin } from './models/penguin';\n\nimport { gameService } from './models/gameMachine';\nimport { appService } from './models/appMachine';\n\n\ndeclare var Module: any;\n\n/**\n * Component for all the components about the Penguin Game.\n */\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss'],\n  animations: [\n    trigger('initAnimation', [\n      state(\n        'enter',\n        style({\n          opacity: 1,\n          transform: 'scale(1)'\n        })\n      ),\n      state(\n        'leave',\n        style({\n          opacity: 0.5,\n          transform: 'scale(0.8)'\n        })\n      ),\n      transition('enter => leave', [animate('1s')]),\n      transition('leave => enter', [animate('0.5s')])\n    ])\n  ]\n})\nexport class BoardComponent implements OnInit {\n\n  /**\n   * Value to check if the game has been started by the user.\n   * Two-way bindings with the game component.\n   */\n  @Input() gameStarted: boolean;\n\n  /**\n   * Value of the Penguin Range element in the template.\n   */\n  numberPenguinValue: number;\n\n  @Input()\n  get numberPenguin() {\n    return this.numberPenguinValue;\n  }\n\n  /**\n   * Emitter to notify the parent Game Component, when the number of penguins changed.\n   */\n  @Output() numberPenguinChange = new EventEmitter();\n\n  set numberPenguin(val:number) {\n    this.numberPenguinValue = val;\n    this.numberPenguinChange.emit(this.numberPenguinValue);\n  }\n\n  /**\n   * Value of the Hexagonal Range element in the template.\n   */\n  numberHexagonalValue: number;\n\n  @Input()\n  get numberHexagonal() {\n    return this.numberHexagonalValue;\n  }\n\n  /**\n   * Emitter to notify the parent Game Component, when the number of hexagonals changed.\n   */\n  @Output() numberHexagonalChange = new EventEmitter();\n\n  set numberHexagonal(val:number) {\n    if(this.numberHexagonalValue !== undefined) {\n      if (this.numberHexagonalValue - val ();\n\n  /**\n   * Emitter to the game component to notify when the player to play changed.\n   */\n  @Output() switchPlayerToPlay = new EventEmitter();\n\n  /**\n   * Value to bind the State Controler FSM and to use its value.\n   */\n  stateControler: any = appService;\n\n  isLoaded = false;\n\n  /**\n   * The pixel width of a hex.\n   */\n  hexWidth: number = 90; // 90\n  /**\n   * The pixel height of a hex.\n   */\n  hexHeight: number = 90; // 90\n\n  /**\n   * 2D Array with all the cells on the map (row of column).\n   */\n  cells: Array>;\n\n  /**\n   * Array with all the penguins on the board.\n   */\n  penguins: Array;\n\n  /**\n   * Pointer to the current penguin selected by the curent player to play.\n   */\n  penguinSelected: Penguin;\n  /**\n   * Pointer to the current cell clicked by the curent player to play.\n   */\n  cellClicked: Cell;\n\n  /**\n   * Value of the current player id.\n   */\n  currentPlayerId: number;\n\n  /**\n   * Value of the user's id.\n   */\n  humanPlayerId: number = 1;\n\n  /**\n   * Pointer to the C++ object : Game.\n   */\n  wasmGame: any;\n  /**\n   * Pointer to the C++ object : Board.\n   */\n  wasmBoard: any;\n  /**\n   * Pointer to the C++ object : vector.\n   */\n  wasmPenguins: any;\n\n  /**\n   * Pointer to the C++ object, which contains the constraints for the MCTS.\n   */\n  mctsConstraints: any;\n  /**\n   * Pointer to the C++ object : MCTSPlayer.\n   */\n  wasmMCTSPlayer: any;\n\n  /**\n   * Pointer to the C++ object : Move, to be able to perform a move and update the MCTS tree.\n   */\n  wasmMove: any;\n\n\n  /**\n  * @ignore\n  */\n  constructor(private toastController: ToastController) { }\n\n  /**\n  * Call when the Board Component is created.\n  * Initialize :\n  *     - the Array of Cells,\n  *     - the Array of Penguins,\n  * Then call the generateMap() function.\n  */\n  ngOnInit(): void {\n    document.addEventListener('new_best_move', (_: any) => {\n      this.processBestMove(this.wasmMCTSPlayer.getLastBestMove());\n    });\n    this.isLoaded = false;\n    this.cells = new Array(this.numberHexagonalValue);\n    this.penguins = new Array();\n    this.generateMap();\n    console.log('Board ok');\n  }\n\n  /**\n   * Call when the Board Component is destroyed.\n   * Delete the c++ object Game if and only if it has been initialized.\n   * Set null in all the others variables used in the front part.\n   */\n  ngOnDestroy(): void {\n    if (this.gameStarted) {\n      console.log('Game destroyed');\n      this.wasmGame.delete();\n      this.cells = null;\n      this.penguins = null;\n      this.gameStarted = false;\n    }\n  }\n\n\n  //*************************************************************************************************************************\n  //********************************************** START GAME ***************************************************************\n  //*************************************************************************************************************************\n\n  /**\n   * Get the random board genrated by the C++ code.\n   * Set the current player Id, the human player id, in agrement with the first player which has to play.\n   * Then call the generateMapFromWasmBoard function to update the front part.\n   */\n  initWasmBoard() {\n    console.log('Init WasmGame', this.numberHexagonalValue, this.numberPenguinValue);\n    this.wasmGame = new Module.PenguinGame(this.numberHexagonalValue, this.numberPenguinValue);\n    this.wasmBoard = this.wasmGame.getBoard();\n\n    this.currentPlayerId = this.wasmGame.getFirstPlayerToPlay();\n    this.humanPlayerId = this.currentPlayerId;\n\n    this.generateMapFromWasmBoard();\n  }\n\n  /**\n   * Get a random vector of penguins generated in C++, when the IA penguins has to be initialize.\n   * Generate the penguins of the Mcts player and then put these in the board.\n   * Create the C++ object to use the MCTS.\n   * Finally, launch the game !\n   */\n  startWasmGame() {\n    this.wasmPenguins = this.wasmBoard.getPawnsOnBoard();\n    this.generateWasmPenguin();\n    this.putPenguinOnWasmBoard();\n\n    this.wasmMCTSPlayer = new Module.penguin_MCTSPlayer(this.wasmGame, { time: 2000 });\n\n    this.playTurn();\n  }\n\n  //*************************************************************************************************************************\n  //********************************************** MAP/TEXTURES *************************************************************\n  //*************************************************************************************************************************\n\n  /**\n   * Create an empty map, with a size of the hexagonals number, and with x penguins.\n   */\n  generateMap() {\n    console.log('Generate Map', this.numberHexagonalValue, this.numberPenguinValue);\n    let cell: Cell;\n    for (let row = 0; row  8x8\n   */\n  addHexagonal(): void {\n    this.numberHexagonalValue++;\n     let cell: Cell;\n\n    //Add a cell on all the row\n    for (let row = 0; row  6x6\n   */\n  removeHexagonal(): void {\n    this.numberHexagonalValue--;\n    //Remove a cell on all the row\n    for (let row = 0; row \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsoleComponent.html":{"url":"components/ConsoleComponent.html","title":"component - ConsoleComponent","body":"\n                   \n\n\n\n  Components\n  ConsoleComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/game/console/console.component.ts\n\n\n    \n        Description\n    \n    \n        Console component\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-console\n            \n\n            \n                styleUrls\n                console.component.scss\n            \n\n\n\n            \n                templateUrl\n                console.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                    \n                        \n                                \n                                \n                        \n                    \n                \n            \n    \n\n\n    \n        Properties\n            \n                \n                    \n                        \n                            Public console_outputs\n                        \n                    \n                    \n                        \n                            console_outputs:     String\n    \n                        \n                    \n                    \n                        \n                            The message which has to be show in the console.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\n\n/**\n * Bind with the C++ Wasm Module\n */\ndeclare var Module: any;\n\n/**\n * Console component\n */\n@Component({\n  selector: 'app-console',\n  templateUrl: './console.component.html',\n  styleUrls: ['./console.component.scss']\n})\nexport class ConsoleComponent implements OnInit {\n  /**\n   * The message which has to be show in the console.\n   */\n  public console_outputs: String = '';\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * Create an EventListener, when the Console Component is created, to bind with the C++ console.\n   */\n  ngOnInit() {\n    document.addEventListener('mcts_console', (e: any) => {\n      console.log(e);\n      this.console_outputs += e.detail.replace(new RegExp('\\n', 'g'), '') + '';\n      console.log(this.console_outputs);\n    });\n  }\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ControlComponent.html":{"url":"components/ControlComponent.html","title":"component - ControlComponent","body":"\n                   \n\n\n\n  Components\n  ControlComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/game/control/control.component.ts\n\n\n    \n        Description\n    \n    \n        Control component for the game settings.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-control\n            \n\n            \n                styleUrls\n                control.component.scss\n            \n\n\n\n            \n                templateUrl\n                control.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            rangeHexagonal\n                        \n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            rangePenguin\n                        \n                        \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            nextStep\n                        \n                        \n                            Emitter to notify the parent Game Component, when the user clicked on next button.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            rangeHexagonalChange\n                        \n                        \n                            Emitter to notify the parent Game Component, when the number of hexagonals changed.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            rangePenguinChange\n                        \n                        \n                            Emitter to notify the parent Game Component, when the number of penguins changed.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(alertController: AlertController, toastController: ToastController)\n                        \n                    \n    \n                    \n                        \n                                Constructor of the Control Component\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        alertController\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                                \n                                                    \n                                                        toastController\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             presentConfirm\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentConfirm()\n                        \n                    \n    \n                    \n                        \n                                Create a asynchronous confirm box.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentToast\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentToast()\n                        \n                    \n    \n                    \n                        \n                                Create a little toast to show the current state of the app.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             rangeHexagonalValue\n                        \n                    \n                    \n                        \n                            rangeHexagonalValue:     number\n    \n                        \n                    \n                    \n                        \n                            Value of the Hexagonal Range element in the template.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             rangePenguinValue\n                        \n                    \n                    \n                        \n                            rangePenguinValue:     number\n    \n                        \n                    \n                    \n                        \n                            Value of the Penguin Range element in the template.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             stateControler\n                        \n                    \n                    \n                        \n                            stateControler:     any\n    \n                        \n                    \n                        \n                            \n                                Default value: appService\n                            \n                        \n                    \n                        \n                            Service to access on the application Final State Machine.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { AlertController, ToastController } from '@ionic/angular';\n\nimport { appService } from '../board/models/appMachine';\n\n/**\n * Control component for the game settings.\n */\n@Component({\n  selector: 'app-control',\n  templateUrl: './control.component.html',\n  styleUrls: ['./control.component.scss']\n})\nexport class ControlComponent implements OnInit {\n  /**\n   * Value of the Penguin Range element in the template.\n   */\n  rangePenguinValue: number;\n\n  @Input()\n  get rangePenguin() {\n    return this.rangePenguinValue;\n  }\n\n  /**\n   * Emitter to notify the parent Game Component, when the number of penguins changed.\n   */\n  @Output() rangePenguinChange = new EventEmitter();\n\n  set rangePenguin(val:number) {\n    this.rangePenguinValue = val;\n    this.rangePenguinChange.emit(this.rangePenguinValue);\n  }\n\n  /**\n   * Value of the Hexagonal Range element in the template.\n   */\n  rangeHexagonalValue: number;\n\n  @Input()\n  get rangeHexagonal() {\n    return this.rangeHexagonalValue;\n  }\n\n  /**\n   * Emitter to notify the parent Game Component, when the number of hexagonals changed.\n   */\n  @Output() rangeHexagonalChange = new EventEmitter();\n\n  set rangeHexagonal(val:number) {\n    this.rangeHexagonalValue = val;\n    this.rangeHexagonalChange.emit(this.rangeHexagonalValue);\n  }\n\n  /**\n   * Emitter to notify the parent Game Component, when the user clicked on next button.\n   */\n  @Output() nextStep = new EventEmitter();\n\n  /**\n   * Service to access on the application Final State Machine.\n   */\n  stateControler: any = appService;\n\n  /**\n   * Constructor of the Control Component\n   * @param alertController \n   * @param toastController \n   */\n  constructor(private alertController: AlertController, private toastController: ToastController) {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {}\n\n  //***************************************************************************************************************************\n  //******************************************** CONFIRM / TOAST **************************************************************\n  //***************************************************************************************************************************\n\n   /**\n    * Create a asynchronous confirm box.\n    */\n  async presentConfirm() {\n    let alert = await this.alertController.create({\n      // title: 'Confirm purchase',\n      message: 'Do you want to continue with these settings ?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Confirm',\n          handler: () => {\n            console.log('Confirm clicked');\n            appService.send(appService.machine.states.settings.on.NEXTSTEP[0].eventType);\n            this.presentToast();\n            this.nextStep.emit();\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  /**\n   * Create a little toast to show the current state of the app.\n   */\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: \"Let's go !!! \",\n      color: 'success',\n      position: 'bottom',\n      duration: 1000\n    });\n    toast.present();\n  }\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GamePage.html":{"url":"components/GamePage.html","title":"component - GamePage","body":"\n                   \n\n\n\n  Components\n  GamePage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/game/game.page.ts\n\n\n    \n        Description\n    \n    \n        Game Component, symbolize the page with the game and with all the above components.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game\n            \n\n            \n                styleUrls\n                game.page.scss\n            \n\n\n\n            \n                templateUrl\n                game.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                    \n                        \n                                \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             initGameBoard\n                        \n                    \n    \n                    \n                        \n    initGameBoard()\n                        \n                    \n    \n                    \n                        \n                                Launch the init oh the wasm part and the C++ game.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             penguinPosed\n                        \n                    \n    \n                    \n                        \n    penguinPosed()\n                        \n                    \n    \n                    \n                        \n                                Call a function in the Info Component, when the user posed one penguin.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             launchGame\n                        \n                    \n    \n                    \n                        \n    launchGame()\n                        \n                    \n    \n                    \n                        \n                                Launch the wasm Game when the user press the Start button.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             flipScore\n                        \n                    \n    \n                    \n                        \n    flipScore()\n                        \n                    \n    \n                    \n                        \n                                Create the animation for the button which show the current score.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             switchPlayerToPlay\n                        \n                    \n    \n                    \n                        \n    switchPlayerToPlay()\n                        \n                    \n    \n                    \n                        \n                                Function to switch the visual information of which player to play.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                            Private boardComponent\n                        \n                    \n                    \n                        \n                            boardComponent:     BoardComponent\n    \n                        \n                    \n                    \n                        \n                            Allow us to control the son component : BoardComponent\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             flipHumanScore\n                        \n                    \n                    \n                        \n                            flipHumanScore:     any\n    \n                        \n                    \n                    \n                        \n                            To animate, to flip, the human score when it changes.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             flipMctsScore\n                        \n                    \n                    \n                        \n                            flipMctsScore:     any\n    \n                        \n                    \n                    \n                        \n                            To animate, to flip, the MCTS score when it changes.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             gameStarted\n                        \n                    \n                    \n                        \n                            gameStarted:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                    \n                        \n                            Variable to control when the game is started or not.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private infoComponent\n                        \n                    \n                    \n                        \n                            infoComponent:     InfoComponent\n    \n                        \n                    \n                    \n                        \n                            Allow us to control the son component : InfoComponent\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             nbHexagonal\n                        \n                    \n                    \n                        \n                            nbHexagonal:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 6\n                            \n                        \n                    \n                        \n                            Value of hexagonals on a single line on the board.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             nbHumanFish\n                        \n                    \n                    \n                        \n                            nbHumanFish:     number\n    \n                        \n                    \n                    \n                        \n                            Value to count the fishes owned by the user.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             nbMctsFish\n                        \n                    \n                    \n                        \n                            nbMctsFish:     number\n    \n                        \n                    \n                    \n                        \n                            Value to count the fishes owned by the mcts.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             nbPenguin\n                        \n                    \n                    \n                        \n                            nbPenguin:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 2\n                            \n                        \n                    \n                        \n                            Value of penguins on the board.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             playerToPlay\n                        \n                    \n                    \n                        \n                            playerToPlay:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: human\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                            Private scoreHuman\n                        \n                    \n                    \n                        \n                            scoreHuman:     any\n    \n                        \n                    \n                    \n                        \n                            To control the flip and the button to show the current score.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private scoreMcts\n                        \n                    \n                    \n                        \n                            scoreMcts:     any\n    \n                        \n                    \n                    \n                        \n                            To control the flip and the button to show the current score.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             stateControler\n                        \n                    \n                    \n                        \n                            stateControler:     any\n    \n                        \n                    \n                        \n                            \n                                Default value: appService\n                            \n                        \n                    \n                        \n                            Service to use the State Machine which controle the app flux.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, Input } from '@angular/core';\nimport { BoardComponent } from './board/board.component';\nimport { InfoComponent } from './info/info.component';\n\nimport { Flip } from 'number-flip';\n\nimport { gameService } from './board/models/gameMachine';\nimport { appService } from './board/models/appMachine';\n\n/**\n * Wasm Module\n */\ndeclare var Module: any;\n\n/**\n * Game Component, symbolize the page with the game and with all the above components.\n */\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.page.html',\n  styleUrls: ['./game.page.scss']\n})\nexport class GamePage implements OnInit {\n\n  /**\n   * To control the flip and the button to show the current score.\n   */\n  @ViewChild('divHuman', { read: ElementRef, static: true }) private scoreHuman: ElementRef;\n\n  /**\n   * To control the flip and the button to show the current score.\n   */\n  @ViewChild('divMcts', { read: ElementRef, static: true }) private scoreMcts: ElementRef;\n\n  playerToPlay: string = \"human\";\n\n  /**\n   * To animate, to flip, the human score when it changes.\n   */\n  flipHumanScore: any = null;\n\n    /**\n   * To animate, to flip, the MCTS score when it changes.\n   */\n  flipMctsScore: any = null;\n\n  /**\n   * Allow us to control the son component : InfoComponent\n   */\n  @ViewChild(InfoComponent, { static: false })\n  private infoComponent: InfoComponent;\n\n\n  /**\n   * Allow us to control the son component : BoardComponent\n   */\n  @ViewChild(BoardComponent, { static: true })\n  private boardComponent: BoardComponent;\n\n  \n  /**\n   * Service to use the State Machine which controle the app flux.\n   */\n  stateControler: any = appService;\n\n  /**\n   * Variable to control when the game is started or not.\n   */\n  gameStarted: boolean = false;\n\n  /**\n   * Value of hexagonals on a single line on the board.\n   */\n  nbHexagonal: number = 6;\n\n  /**\n   * Value of penguins on the board.\n   */\n  nbPenguin: number = 2;\n\n  /**\n   * Value to count the fishes owned by the user.\n   */\n  nbHumanFish: number;\n\n  /**\n   * Value to count the fishes owned by the mcts.\n   */\n  nbMctsFish: number;\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.nbHumanFish = 0;\n    this.nbMctsFish = 0;\n  }\n\n  //***************************************************************************************************************************\n  // ************************************************ START GAME **************************************************************\n  // **************************************************************************************************************************\n  \n  /**\n   * Launch the init oh the wasm part and the C++ game.\n   */\n  initGameBoard() {\n    console.log('Init Game Board');\n    this.boardComponent.initWasmBoard();\n  }\n\n  /**\n   * Call a function in the Info Component, when the user posed one penguin.\n   */\n  penguinPosed() {\n    this.infoComponent.penguinPosed();\n  }\n\n  /**\n   * Launch the wasm Game when the user press the Start button.\n   */\n  launchGame() {\n    appService.send(appService.machine.states.initPosPenguin.on.PENGUINSPOSED[0].eventType);\n    this.gameStarted = true;\n    this.boardComponent.startWasmGame();\n    this.flipScore();\n  }\n\n  //***************************************************************************************************************************\n  //************************************************ ANIMATION ****************************************************************\n  //***************************************************************************************************************************\n\n  /**\n   * Create the animation for the button which show the current score.\n   */\n  flipScore() {\n    if (!this.flipHumanScore) {\n      this.flipHumanScore = new Flip({\n        node: this.scoreHuman.nativeElement,\n        from: '99'\n      });\n    }\n    if (!this.flipMctsScore) {\n      this.flipMctsScore = new Flip({\n        node: this.scoreMcts.nativeElement,\n        from: '99'\n      });\n    }\n\n    this.flipHumanScore.flipTo({\n      to: this.nbHumanFish\n    });\n\n    this.flipMctsScore.flipTo({\n      to: this.nbMctsFish\n    });\n  }\n\n  /**\n   * Function to switch the visual information of which player to play.\n   */\n  switchPlayerToPlay() {\n    if(this.playerToPlay === \"human\") {\n      this.playerToPlay = \"mcts\";\n    } else {\n      this.playerToPlay = \"human\";\n    }\n    this.flipScore();\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HexComponent.html":{"url":"components/HexComponent.html","title":"component - HexComponent","body":"\n                   \n\n\n\n  Components\n  HexComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/game/board/hex/hex.component.ts\n\n\n    \n        Description\n    \n    \n        Hexagonal Component\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-hex\n            \n\n            \n                styleUrls\n                hex.component.scss\n            \n\n\n\n            \n                templateUrl\n                hex.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            cell\n                        \n                        \n                            Set the cell of the componennt from the parent Board Component.\n\n                              \n                                Type:    Cell\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            isLoaded\n                        \n                        \n                            Set the boolean variable from the parent Board Component, if the cell has to be show or not.\n\n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            cellClicked\n                        \n                        \n                            Emitter to the parent Board Component, to raise an event when the user clicked on the component.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                    \n                        \n                                \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             onCellClick\n                        \n                    \n    \n                    \n                        \n    onCellClick()\n                        \n                    \n    \n                    \n                        \n                                Raise an event to the parent Board Component, when the user clicked on the hex component.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onCellHover\n                        \n                    \n    \n                    \n                        \n    onCellHover(hover: boolean)\n                        \n                    \n    \n                    \n                        \n                                To react, when the mouse over or mouse out of the chex component.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        hover\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setSelectedColor\n                        \n                    \n    \n                    \n                        \n    setSelectedColor(newStatus: boolean)\n                        \n                    \n    \n                    \n                        \n                                To set the color on the cell, if it is selected or not.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        newStatus\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isSelectable\n                        \n                    \n    \n                    \n                        \n    isSelectable()\n                        \n                    \n    \n                    \n                        \n                                \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        if the cell is selectable or not\n    \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             isSelected\n                        \n                    \n                    \n                        \n                            isSelected:     boolean\n    \n                        \n                    \n                    \n                        \n                            Variable to know if the cell is selected or not.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             textures\n                        \n                    \n                    \n                        \n                            textures:     string[]\n    \n                        \n                    \n                    \n                        \n                            Array of textures. Can be referenced by index in terrainType.Specify the types of terrain available on the map. Map cells reference these terraintypes by index. Add custom properties to extend functionality.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Cell } from '../models/cell';\n\nimport { gameService } from '../models/gameMachine';\nimport { appService } from '../models/appMachine';\n\n/**\n * Hexagonal Component\n */\n@Component({\n  selector: 'app-hex',\n  templateUrl: './hex.component.html',\n  styleUrls: ['./hex.component.scss']\n})\nexport class HexComponent implements OnInit {\n  /**\n   * Set the cell of the componennt from the parent Board Component.\n   */\n  @Input() cell: Cell;\n\n  /**\n   * Set the boolean variable from the parent Board Component, if the cell has to be show or not.\n   */\n  @Input() isLoaded: boolean;\n\n  /**\n   * Emitter to the parent Board Component, to raise an event when the user clicked on the component.\n   */\n  @Output() cellClicked = new EventEmitter();\n\n  /**\n   * Array of textures. Can be referenced by index in terrainType.\n   * Specify the types of terrain available on the map. Map cells reference these terrain\n   * types by index. Add custom properties to extend functionality.\n   */\n  textures: string[] = [\n    'assets/game/empty.png',\n    'assets/game/tileSnow_big.png',\n    'assets/game/normal_fish1.png',\n    'assets/game/normal_fish2.png',\n    'assets/game/normal_fish3.png',\n    'assets/game/selected_fish1.png',\n    'assets/game/selected_fish2.png',\n    'assets/game/selected_fish3.png',\n    'assets/game/available_fish1.png',\n    'assets/game/available_fish2.png',\n    'assets/game/available_fish3.png'\n  ];\n\n  /**\n   * Variable to know if the cell is selected or not.\n   */\n  isSelected: boolean;\n\n  /**\n   * @ignore\n   */\n  constructor() {}\n\n  /**\n   * @ignore \n   */\n  ngOnInit() {\n    this.isSelected = false;\n  }\n\n  /**\n   * Raise an event to the parent Board Component, when the user clicked on the hex component.\n   */\n  onCellClick() {\n    // console.log(this.cell.toString());\n    if (this.isSelectable()) {\n      this.cellClicked.emit(this.cell);\n    }\n  }\n\n  /**\n   * To react, when the mouse over or mouse out of the chex component.\n   * @param {boolean} hover \n   */\n  onCellHover(hover: boolean) {\n    if (this.isSelectable()) {\n      this.setSelectedColor(hover);\n    }\n  }\n\n  /**\n   * To set the color on the cell, if it is selected or not.\n   * @param {boolean} newStatus \n   */\n  setSelectedColor(newStatus: boolean) {\n    if (this.isSelected && !newStatus) {\n      this.cell.setSelectedColor(false);\n      this.isSelected = false;\n    } else if (!this.isSelected && newStatus) {\n      this.cell.setSelectedColor(true);\n      this.isSelected = true;\n    }\n  }\n\n  /**\n   * @returns if the cell is selectable or not\n   */\n  isSelectable(): boolean {\n    return (\n      this.isLoaded === true &&\n      this.cell.terrainIndex !== 0 &&\n      (appService.state.value === 'initPosPenguin' ||\n        gameService.state.value === 'waiting' ||\n        (gameService.state.value === 'penguinSelected' && this.cell.isAvailable))\n    );\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n  Components\n  HomePage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoComponent.html":{"url":"components/InfoComponent.html","title":"component - InfoComponent","body":"\n                   \n\n\n\n  Components\n  InfoComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/game/info/info.component.ts\n\n\n    \n        Description\n    \n    \n        Info Component to show the stock of penguins.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-info\n            \n\n            \n                styleUrls\n                info.component.scss\n            \n\n\n\n            \n                templateUrl\n                info.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            nbPenguin\n                        \n                        \n                            To catch the number of penguin from the parent Game Component\n\n                              \n                                Type:    number\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            launchGame\n                        \n                        \n                            Emitter to launch the game in the Game Component.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(alertController: AlertController, toastController: ToastController)\n                        \n                    \n    \n                    \n                        \n                                Constructor of the Info Component.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        alertController\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                                \n                                                    \n                                                        toastController\n                                                    \n                                                    \n                                                        \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             penguinPosed\n                        \n                    \n    \n                    \n                        \n    penguinPosed()\n                        \n                    \n    \n                    \n                        \n                                Update the array of the penguins stock.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             startConfirm\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            startConfirm()\n                        \n                    \n    \n                    \n                        \n                                To create a little controller, to confirm or not the action to be performed.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             presentToast\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            presentToast()\n                        \n                    \n    \n                    \n                        \n                                Create a little toast to show the current state of the app service.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             penguinsNotPosed\n                        \n                    \n                    \n                        \n                            penguinsNotPosed:     boolean[]\n    \n                        \n                    \n                    \n                        \n                            Arraw to describe the stock of non-posed penguins.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Penguin } from '../board/models/penguin';\n\nimport { appService } from '../board/models/appMachine';\nimport { AlertController, ToastController } from '@ionic/angular';\n\n/**\n * Info Component to show the stock of penguins.\n */\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit {\n  /**\n   * To catch the number of penguin from the parent Game Component\n   */\n  @Input() nbPenguin: number;\n\n  /**\n   * Emitter to launch the game in the Game Component.\n   */\n  @Output() launchGame = new EventEmitter();\n\n  /**\n   * Arraw to describe the stock of non-posed penguins.\n   */\n  penguinsNotPosed: Array;\n\n  /**\n   * Constructor of the Info Component.\n   * @param alertController \n   * @param toastController \n   */\n  constructor(private alertController: AlertController, private toastController: ToastController) {}\n\n  /**\n   * Init the array of penguins, when the Component is init.\n   */\n  ngOnInit() {\n    this.penguinsNotPosed = new Array(this.nbPenguin);\n  }\n\n  /**\n   * Update the array of the penguins stock.\n   */\n  penguinPosed() {\n    this.penguinsNotPosed.pop();\n  }\n\n  //***************************************************************************************************************************\n  //******************************************** CONFIRM / TOAST **************************************************************\n  //***************************************************************************************************************************\n  /**\n   * To create a little controller, to confirm or not the action to be performed.\n   */\n  async startConfirm() {\n    let alert = await this.alertController.create({\n      // title: 'Confirm purchase',\n      message: 'Do you want to start the game ?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        },\n        {\n          text: 'Confirm',\n          handler: () => {\n            console.log('Confirm clicked, game launched !');\n            this.launchGame.emit();\n            this.presentToast();\n          }\n        }\n      ]\n    });\n    alert.present();\n  }\n\n  /**\n   * Create a little toast to show the current state of the app service.\n   */\n  async presentToast() {\n    const toast = await this.toastController.create({\n      message: \"Let's go !!! \",\n      color: 'success',\n      position: 'bottom',\n      duration: 1000\n    });\n    toast.present();\n  }\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PenguinComponent.html":{"url":"components/PenguinComponent.html","title":"component - PenguinComponent","body":"\n                   \n\n\n\n  Components\n  PenguinComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/game/board/penguin/penguin.component.ts\n\n\n    \n        Description\n    \n    \n        Penguin Component\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-penguin\n            \n\n            \n                styleUrls\n                penguin.component.scss\n            \n\n\n\n            \n                templateUrl\n                penguin.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            isLoaded\n                        \n                        \n                            Variable from the parent Board Component, to show the penguin component or not.\n\n                              \n                                Type:    boolean\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            penguin\n                        \n                        \n                            Set the current penguin from the parent Board Component.\n\n                              \n                                Type:    Penguin\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            penguinClicked\n                        \n                        \n                            Emitter to the parent Board Component, to raise an event then the penguin is clicked.\n\n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                    \n                        \n                                \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             onPenguinClick\n                        \n                    \n    \n                    \n                        \n    onPenguinClick()\n                        \n                    \n    \n                    \n                        \n                                To react on the click, and raise the event to the parent Board Component, if the click is permitted.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             textures\n                        \n                    \n                    \n                        \n                            textures:     string[]\n    \n                        \n                    \n                    \n                        \n                            Array of textures. Texture can be referenced by index of the penguin's owner.\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n\nimport { gameService } from '../models/gameMachine';\nimport { Penguin } from '../models/penguin';\n\n/**\n * Penguin Component\n */\n@Component({\n  selector: 'app-penguin',\n  templateUrl: './penguin.component.html',\n  styleUrls: ['./penguin.component.scss']\n})\nexport class PenguinComponent implements OnInit {\n  /**\n   * Set the current penguin from the parent Board Component.\n   */\n  @Input() penguin: Penguin;\n  /**\n   * Variable from the parent Board Component, to show the penguin component or not.\n   */\n  @Input() isLoaded: boolean;\n\n  /**\n   * Emitter to the parent Board Component, to raise an event then the penguin is clicked.\n   */\n  @Output() penguinClicked = new EventEmitter();\n\n  /**\n   * Array of textures. Texture can be referenced by index of the penguin's owner.\n   */\n  textures: string[] = ['assets/penguin_selected.png', 'assets/penguin_enemie.png', 'assets/penguin.png'];\n\n  /**\n   * @ignore\n   */\n  constructor() { }\n\n  /**\n   * @ignore\n   */\n  ngOnInit() { }\n\n  //***************************************************************************************************************************\n  //************************************************ ANIMATION ****************************************************************\n  //***************************************************************************************************************************\n\n  /**\n   * To react on the click, and raise the event to the parent Board Component, if the click is permitted.\n   */\n  onPenguinClick() {\n    console.log(this.penguin.toString());\n    if (gameService.state.value !== 'moveBlocked') {\n      this.penguinClicked.emit(this.penguin);\n    }\n  }\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeamPage.html":{"url":"components/TeamPage.html","title":"component - TeamPage","body":"\n                   \n\n\n\n  Components\n  TeamPage\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/pages/team/team.page.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-team\n            \n\n            \n                styleUrls\n                team.page.scss\n            \n\n\n\n            \n                templateUrl\n                team.page.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor()\n                        \n                    \n    \n                \n            \n    \n\n\n\n        \n            import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-team',\n  templateUrl: './team.page.html',\n  styleUrls: ['./team.page.scss'],\n})\nexport class TeamPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuoteService.html":{"url":"injectables/QuoteService.html","title":"injectable - QuoteService","body":"\n                   \n\n\n\n\n\n  Injectables\n  QuoteService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/quote.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                        \n                    \n            \n\n\n    \n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuoteService {\n\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\nRoutes\n\n    \n        \n            path\n            pathMatch\n            component\n            redirectTo\n        \n\n        \n            \n                    \" \"\n            \n            \n            AboutPage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            GamePage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            HomePage\n            \n        \n        \n            \n                    \" \"\n            \n            \n            TeamPage\n            \n        \n\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     navigateTo\n                                \n                            \n            \n                            \n                                \n            navigateTo(destination: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getParagraphText\n                                \n                            \n            \n                            \n                                \n            getParagraphText()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n    \n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(destination) {\n    return browser.get(destination);\n  }\n\n  getParagraphText() {\n    return element(by.deepCss('app-root ion-content')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cell.html":{"url":"classes/Cell.html","title":"class - Cell","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Cell\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/game/board/models/cell.ts\n        \n\n            \n                Description\n            \n            \n                The cell object represents one map hex cell.\n\n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(row: number, column: number)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     setWasmCell\n                                \n                            \n            \n                            \n                                \n            setWasmCell(wasmCell: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getHexWidth\n                                \n                            \n            \n                            \n                                \n            getHexWidth()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getHexHeight\n                                \n                            \n            \n                            \n                                \n            getHexHeight()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getCellCenter\n                                \n                            \n            \n                            \n                                \n            getCellCenter()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setSelectedColor\n                                \n                            \n            \n                            \n                                \n            setSelectedColor(set: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     setAvailableColor\n                                \n                            \n            \n                            \n                                \n            setAvailableColor(set: boolean)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isGone\n                                \n                            \n            \n                            \n                                \n            isGone()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     toString\n                                \n                            \n            \n                            \n                                \n            toString()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     center\n                                \n                            \n                            \n                                \n                                    center:     Pos\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     column\n                                \n                            \n                            \n                                \n                                    column:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hasPenguin\n                                \n                            \n                            \n                                \n                                    hasPenguin:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hexBottomPad\n                                \n                            \n                            \n                                \n                                    hexBottomPad:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 33\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hexHeight\n                                \n                            \n                            \n                                \n                                    hexHeight:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 90\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hexSize\n                                \n                            \n                            \n                                \n                                    hexSize:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     hexWidth\n                                \n                            \n                            \n                                \n                                    hexWidth:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 90\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isAvailable\n                                \n                            \n                            \n                                \n                                    isAvailable:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Default value: false\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     nbFish\n                                \n                            \n                            \n                                \n                                    nbFish:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     row\n                                \n                            \n                            \n                                \n                                    row:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     terrainIndex\n                                \n                            \n                            \n                                \n                                    terrainIndex:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     wasmCell\n                                \n                            \n                            \n                                \n                                    wasmCell:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Pos } from './pos';\n\nconst EMPTYINDEX = 0,\n  NORMALINDEX = 1,\n  SELECTEDINDEX = 4,\n  AVAILABLEINDEX = 7;\n\ndeclare var Module: any;\n\n/**\n *\n * The cell object represents one map hex cell.\n */\n\nexport class Cell {\n  row: number;\n  column: number;\n  center: Pos = { x: 0, y: 0 };\n\n  nbFish: number;\n  terrainIndex: number;\n\n  wasmCell: any;\n\n  isAvailable: boolean = false;\n\n  hasPenguin: boolean;\n\n  // The pixel width of a hex.\n  hexWidth: number = 90; // 90\n  // The pixel height of a hex.\n  hexHeight: number = 90; // 90\n  // This is the pixel height specifying an area of overlap for hex cells. Necessary when\n  // working with isometric view art systems.\n  hexBottomPad: number = 33; // 33\n\n  // The radius of the hex. Ignored if hexWidth and hexHeight are set to non-null.\n  hexSize: number = this.hexWidth / 2; // hexWidth / 2\n\n  constructor(row: number, column: number) {\n    this.row = row;\n    this.column = column;\n    this.center = this.getCellCenter();\n    this.hasPenguin = false;\n    this.nbFish = 0;\n    this.terrainIndex = NORMALINDEX;\n  }\n\n  setWasmCell(wasmCell: any) {\n    this.wasmCell = wasmCell;\n    this.nbFish = wasmCell.getFish();\n    this.terrainIndex = NORMALINDEX + this.nbFish;\n  }\n\n  // Calculates and returns the width of a hex cell.\n  getHexWidth() {\n    let result: number = null;\n    result = this.hexSize * 2;\n    result = (Math.sqrt(3) / 2) * result;\n\n    return result;\n  }\n\n  // Calculates and returns the height of a hex cell.\n  getHexHeight() {\n    let result: number = null;\n    result = this.hexSize * 2;\n\n    return result;\n  }\n\n  // Calculate the center of a cell based on column, row and coordinate system.\n  getCellCenter() {\n    // console.log(\"getCellCenter(\" + this.row + \",\" + this.column + \")\");\n    let center: Pos = { x: 0, y: 0 };\n\n    center.y = this.row * (this.hexHeight - 17);\n\n    if (this.row % 2 === 0) {\n      // even\n      center.x = this.column * this.hexWidth;\n    } else {\n      // odd\n      center.x = this.column * this.hexWidth + this.hexWidth / 2;\n    }\n\n    return center;\n  }\n\n  setSelectedColor(set: boolean) {\n    if (set) {\n      this.terrainIndex = SELECTEDINDEX + this.nbFish;\n    } else {\n      if (this.isAvailable) {\n        this.terrainIndex = AVAILABLEINDEX + this.nbFish;\n      } else {\n        this.terrainIndex = NORMALINDEX + this.nbFish;\n      }\n    }\n  }\n\n  setAvailableColor(set: boolean) {\n    this.isAvailable = set;\n    if (set) {\n      this.terrainIndex = AVAILABLEINDEX + this.nbFish;\n    } else {\n      this.terrainIndex = NORMALINDEX + this.nbFish;\n    }\n  }\n\n  isGone() {\n    this.terrainIndex = EMPTYINDEX;\n  }\n\n  toString() {\n    let wasmPos = Module.hex_cube_to_offset(Module.hex_axial_to_cube(this.wasmCell.getPosition()));\n    return '(' + wasmPos.row + ',' + wasmPos.column + ')' + this.wasmCell.isGone() + ' -> ' + this.wasmCell.getFish();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Penguin.html":{"url":"classes/Penguin.html","title":"class - Penguin","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Penguin\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/game/board/models/penguin.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     setWasmPenguin\n                                \n                            \n            \n                            \n                                \n            setWasmPenguin(wasmPenguin: any)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     switchPenguinColor\n                                \n                            \n            \n                            \n                                \n            switchPenguinColor()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     moveTo\n                                \n                            \n            \n                            \n                                \n            moveTo(newCell: Cell)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     toString\n                                \n                            \n            \n                            \n                                \n            toString()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     cellPosition\n                                \n                            \n                            \n                                \n                                    cellPosition:     Cell\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isSelected\n                                \n                            \n                            \n                                \n                                    isSelected:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     isVisible\n                                \n                            \n                            \n                                \n                                    isVisible:     boolean\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private moveToAnimation\n                                \n                            \n                            \n                                \n                                    moveToAnimation:     any\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     textureIndex\n                                \n                            \n                            \n                                \n                                    textureIndex:     number\n            \n                                \n                            \n                                \n                                    \n                                        Default value: 2\n                                    \n                                \n                        \n                    \n                    \n                        \n                            \n                                \n                                     wasmPenguin\n                                \n                            \n                            \n                                \n                                    wasmPenguin:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { Pos } from './pos';\nimport { Cell } from './cell';\nimport { appService } from './appMachine';\n\ndeclare var Module: any;\n\nexport class Penguin {\n  cellPosition: Cell;\n  textureIndex: number = 2;\n\n  wasmPenguin: any;\n\n  // playerPenguin: boolean;\n\n  private moveToAnimation: any;\n\n  isVisible: boolean;\n  isSelected: boolean;\n\n  constructor() {\n    this.isVisible = false;\n    this.isSelected = false;\n  }\n\n  setWasmPenguin(wasmPenguin: any) {\n    this.wasmPenguin = wasmPenguin;\n    this.textureIndex = this.wasmPenguin.getOwner().getId();\n  }\n\n  switchPenguinColor() {\n    this.isSelected = !this.isSelected;\n    if (this.isSelected) {\n      this.textureIndex = 0;\n    } else {\n      this.textureIndex = this.wasmPenguin.getOwner().getId();\n    }\n  }\n\n  moveTo(newCell: Cell) {\n    console.log(this.toString() + ' move from ' + this.cellPosition.toString() + ' to ' + newCell.toString());\n    this.cellPosition.isGone();\n    this.cellPosition = newCell;\n  }\n\n  // moveTo(newCell: Cell) {\n  //     if (this.cellPosition !== null) {\n  //         this.cellPosition.hasPenguin = false;\n  //     }\n  //     this.cellPosition = newCell;\n  //     this.cellPosition.hasPenguin = true;\n  //     this.center = newCell.getCellCenter();\n  // }\n\n  toString() {\n    if (appService.state.value === 'gameStarted') {\n      let wasmPos = Module.hex_cube_to_offset(\n        Module.hex_axial_to_cube(this.wasmPenguin.getCurrentCell().getPosition())\n      );\n      return (\n        'Penguin : ' +\n        //  + '[' + this.cellPosition.row + '][' + this.cellPosition.column + ']'\n        '(' +\n        wasmPos.row +\n        ',' +\n        wasmPos.column +\n        ')' +\n        this.wasmPenguin.getOwner().getId()\n      );\n    } else {\n      return (\n        'Penguin : ' +\n        //  + '[' + this.cellPosition.row + '][' + this.cellPosition.column + ']'\n        '(' +\n        this.cellPosition.row +\n        ',' +\n        this.cellPosition.column +\n        ')' +\n        this.textureIndex\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pos.html":{"url":"classes/Pos.html","title":"class - Pos","body":"\n                   \n\n\n\n\n\n\n\n  Classes\n  Pos\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/game/board/models/pos.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(x: number, y: number)\n                                \n                            \n            \n                        \n                    \n            \n\n\n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     x\n                                \n                            \n                            \n                                \n                                    x:     number\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     y\n                                \n                            \n                            \n                                \n                                    y:     number\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        export class Pos {\n    x: number;\n    y: number;\n  \n    constructor(x: number, y: number) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n  \n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             enterAnimation\n                        \n                    \n                    \n                        \n                            enterAnimation:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             Module\n                        \n                    \n                    \n                        \n                            Module:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             appMachine\n                        \n                    \n                    \n                        \n                            appMachine:     \n    \n                        \n                    \n                    \n                        \n                            Final State Machine to control the state of the whole application|- id: noun of the FSM,|- initial: state in the beginning of the app,|- context: initial part,|- states: to define all the states in the FSM| |- settings: describe the state| | |-on: define a possible action,| | | |- {identifier}| | | | |- target: destination state| | | | |- actions: to perform when the action was called\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             appService\n                        \n                    \n                    \n                        \n                            appService:     \n    \n                        \n                    \n                    \n                        \n                            Define a service to be able to access the application Final State Machine, in the angular components,Then start it.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             EMPTYINDEX\n                        \n                    \n                    \n                        \n                            EMPTYINDEX:     \n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             Module\n                        \n                    \n                    \n                        \n                            Module:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             gameMachine\n                        \n                    \n                    \n                        \n                            gameMachine:     \n    \n                        \n                    \n                    \n                        \n                            Final State Machine to control the state of the whole penguin game|- id: noun of the FSM,|- initial: state in the beginning of the app,|- context: initial part,|- states: to define all the states in the FSM| |- settings: describe the state| | |-on: define a possible action,| | | |- {identifier}| | | | |- target: destination state| | | | |- actions: to perform when the action was called\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             gameService\n                        \n                    \n                    \n                        \n                            gameService:     \n    \n                        \n                    \n                    \n                        \n                            Define a service to be able to access the ^penguin game Final State Machine, in the angular components,Then start it.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             Module\n                        \n                    \n                    \n                        \n                            Module:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             Module\n                        \n                    \n                    \n                        \n                            Module:     any\n    \n                        \n                    \n                    \n                        \n                            Bind with the C++ Wasm Module\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             Module\n                        \n                    \n                    \n                        \n                            Module:     any\n    \n                        \n                    \n                    \n                        \n                            Wasm Module\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             environment\n                        \n                    \n                    \n                        \n                            environment:     \n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    41%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                e2e/src/app.po.ts\n            \n            \n                classe\n            \n            \n                AppPage\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/app/pages/about/about.page.ts\n            \n            \n                component\n            \n            \n                AboutPage\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/pages/game/board/board.component.ts\n            \n            \n                component\n            \n            \n                BoardComponent\n            \n            \n                93 %\n                (46/49)\n            \n        \n        \n            \n                src/app/pages/game/board/hex/hex.component.ts\n            \n            \n                component\n            \n            \n                HexComponent\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                src/app/pages/game/board/models/cell.ts\n            \n            \n                classe\n            \n            \n                Cell\n            \n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                src/app/pages/game/board/models/penguin.ts\n            \n            \n                classe\n            \n            \n                Penguin\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                src/app/pages/game/board/models/pos.ts\n            \n            \n                classe\n            \n            \n                Pos\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/pages/game/board/penguin/penguin.component.ts\n            \n            \n                component\n            \n            \n                PenguinComponent\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/app/pages/game/console/console.component.ts\n            \n            \n                component\n            \n            \n                ConsoleComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/pages/game/control/control.component.ts\n            \n            \n                component\n            \n            \n                ControlComponent\n            \n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                src/app/pages/game/game.page.ts\n            \n            \n                component\n            \n            \n                GamePage\n            \n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                src/app/pages/game/info/info.component.ts\n            \n            \n                component\n            \n            \n                InfoComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                src/app/pages/home/home.page.ts\n            \n            \n                component\n            \n            \n                HomePage\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/pages/team/team.page.ts\n            \n            \n                component\n            \n            \n                TeamPage\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/services/quote.service.ts\n            \n            \n                injectable\n            \n            \n                QuoteService\n            \n            \n                0 %\n                (0/0)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
